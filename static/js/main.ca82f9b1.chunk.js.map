{"version":3,"sources":["boxed_expression_editor/api/BuiltinAggregation.ts","boxed_expression_editor/api/ContextEntry.ts","boxed_expression_editor/api/DataType.ts","boxed_expression_editor/api/HitPolicy.ts","boxed_expression_editor/api/LogicType.ts","boxed_expression_editor/i18n/locales/en.ts","boxed_expression_editor/i18n/setup.ts","boxed_expression_editor/index.tsx","index.tsx","boxed_expression_editor/api/index.ts","boxed_expression_editor/i18n/index.ts","boxed_expression_editor/api/Table.ts","boxed_expression_editor/components/PopoverMenu/PopoverMenu.tsx","boxed_expression_editor/context/BoxedExpressionGlobalContext.tsx","boxed_expression_editor/components/EditExpressionMenu/EditExpressionMenu.tsx","boxed_expression_editor/components/Resizer/dom/Cell.ts","boxed_expression_editor/components/Resizer/dom/DOMSession.ts","boxed_expression_editor/components/Resizer/dom/ResizerSupervisorDOM.ts","boxed_expression_editor/components/Resizer/Resizer.tsx","boxed_expression_editor/components/Resizer/ResizerSupervisor.tsx","boxed_expression_editor/components/LiteralExpression/LiteralExpression.tsx","boxed_expression_editor/components/Table/TableBody.tsx","boxed_expression_editor/components/Table/TableHandlerMenu.tsx","boxed_expression_editor/components/Table/TableHandler.tsx","boxed_expression_editor/components/Table/TableHeader.tsx","boxed_expression_editor/components/Table/Table.tsx","boxed_expression_editor/components/Table/EditableCell.tsx","boxed_expression_editor/components/RelationExpression/RelationExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpression.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryExpressionCell.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfo.tsx","boxed_expression_editor/components/ContextExpression/ContextEntryInfoCell.tsx","boxed_expression_editor/components/ContextExpression/ContextExpression.tsx","boxed_expression_editor/components/DecisionTableExpression/DecisionTableExpression.tsx","boxed_expression_editor/components/ListExpression/ListExpression.tsx","boxed_expression_editor/components/InvocationExpression/InvocationExpression.tsx","boxed_expression_editor/components/LogicTypeSelector/LogicTypeSelector.tsx","boxed_expression_editor/hooks/Hooks.ts","boxed_expression_editor/components/ExpressionContainer/ExpressionContainer.tsx","boxed_expression_editor/components/BoxedExpressionEditor/BoxedExpressionEditor.tsx"],"names":["BuiltinAggregation","DEFAULT_ENTRY_INFO_MIN_WIDTH","DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH","getHandlerConfiguration","i18n","groupName","group","items","name","rowOperations","insertAbove","type","TableOperation","RowInsertAbove","insertBelow","RowInsertBelow","delete","RowDelete","clear","RowClear","generateNextAvailableEntryName","contextEntries","namePrefix","lastIndex","length","candidateName","entryWithCandidateName","_","entryInfo","getEntryKey","row","original","resetEntry","entryExpression","uid","DataType","HitPolicy","LogicType","en","en_common","choose","columnOperations","insertLeft","insertRight","columns","context","contextEntry","dataType","decisionTable","editContextEntry","editExpression","editParameter","editRelation","enterFunction","function","invocation","list","literalExpression","parameters","relation","rows","selectExpression","selectLogicType","boxedExpressionEditorI18nDefaults","locale","dictionary","boxedExpressionEditorDictionaries","Map","BoxedExpressionEditorI18nContext","React","useBoxedExpressionEditorI18n","useContext","window","renderBoxedExpressionEditor","selector","definition","ReactDOM","expressionDefinition","selectedExpression","document","getElementById","App","logicType","result","useState","updatedExpression","setUpdatedExpression","beeApi","resetExpressionDefinition","broadcastLiteralExpressionDefinition","broadcastRelationExpressionDefinition","broadcastContextExpressionDefinition","broadcastListExpressionDefinition","broadcastInvocationExpressionDefinition","className","style","position","top","left","width","height","maxHeight","display","JSON","stringify","TableHeaderVisibility","PopoverMenu","children","arrowPlacement","body","title","appendTo","hasAutoWidth","Popover","data-ouia-component-id","distance","id","reference","headerContent","bodyContent","BoxedExpressionGlobalContext","EXPRESSION_NAME","EditExpressionMenu","nameField","dataTypeField","selectedDataType","Undefined","selectedExpressionName","onExpressionUpdate","globalContext","boxedExpressionEditorRef","current","undefined","dataTypeSelectOpen","setDataTypeSelectOpen","setDataType","expressionName","setExpressionName","useEffect","onExpressionNameChange","useCallback","event","target","value","onDataTypeSelect","selection","getDataTypes","Object","values","key","SelectOption","onDataTypeFilter","e","input","RegExp","exception","filter","child","test","props","onDataTypeSelectToggle","isOpen","onChange","onBlur","placeholder","Select","ouiaId","variant","SelectVariant","typeahead","typeAheadAriaLabel","onToggle","onSelect","onFilter","selections","hasInlineFilter","inlineFilterPlaceholderText","Cell","element","depth","lastColumn","rect","this","slice","call","classList","c","match","getBoundingClientRect","parent","closest","isLast","lastChild","cellWidth","dispatchEvent","CustomEvent","getId","detail","setWidth","fetchChildWidth","PADDING","isLastColumn","parentRect","cellRect","right","x","thead","querySelector","DEFAULT_WIDTH","DOMSession","cells","buildCells","fetchCellElements","forEach","cellElement","buildCell","htmlElement","depthLevel","exitingElement","find","cell","map","push","htmlElements","querySelectorAll","CELL_CSS_SELCTOR","SupervisorExecution","domSession","refreshWidthAsParent","refreshWidthAsLastColumn","getCells","p1","performance","now","index","sort","c1","c2","updateSize","updateLastColumns","p2","console","log","DRAWER_SPLITTER_ELEMENT","Resizer","minHeight","targetHeight","minWidth","onHorizontalResizeStop","resizerHandler","useMemo","uuid","w","setW","setCells","initalW","setInitialW","useLayoutEffect","listener","addEventListener","removeEventListener","onResizeStart","applicableCells","allCells","currentCell","initialWidth","getRect","someLast","cellContainsCurrent","contains","setAttribute","onResize","_e","data","size","delta","parseInt","getAttribute","onResizeStop","minConstraints","axis","handle","ResizerSupervisor","execute","LiteralExpression","content","onUpdatingNameAndDataType","isHeadless","onUpdatingRecursiveExpression","useRef","expressionDataType","literalExpressionContent","literalExpressionWidth","spreadLiteralExpressionDefinition","onContentChange","renderElementWithResizeHandler","renderLiteralExpressionHeader","getBodyContent","TextArea","defaultValue","aria-label","TableBody","tableInstance","headerVisibility","Full","getRowKey","getColumnKey","renderCellResizer","column","canResizeOnCell","getResizerProps","renderCell","cellIndex","rowIndex","cellType","canResize","Td","getCellProps","getTdProps","render","renderBodyRow","Tr","getRowProps","renderAdditiveRow","role","childIndex","allColumns","Tbody","None","getTableBodyProps","prepareRow","TableHandlerMenu","handlerConfiguration","allowedOperations","onOperation","Menu","itemId","groupOperation","MenuGroup","label","operation","MenuList","MenuItem","isDisabled","TableHandler","columnPrefix","tableColumns","lastSelectedColumnIndex","lastSelectedRowIndex","tableRows","onRowsUpdate","onRowAdding","showTableHandler","setShowTableHandler","tableHandlerTarget","tableHandlerAllowedOperations","resetRowCustomFunction","onColumnsUpdate","selectedColumnIndex","setSelectedColumnIndex","selectedRowIndex","setSelectedRowIndex","insertBefore","elements","insertAfter","deleteAt","generateNextAvailableColumnName","accessor","generateNextAvailableColumn","updateColumnsThenRows","handlingOperation","tableOperation","ColumnInsertLeft","ColumnInsertRight","ColumnDelete","hasNoPadding","showClose","isVisible","shouldClose","shouldOpen","showFunction","TableHeader","editColumnLabel","skipLastHeaderGroup","updateColumnNameInRows","prevColumnName","newColumnName","tableCells","assignedCellValue","onColumnNameOrDataTypeUpdate","columnIndex","updatedTableColumns","renderCountColumn","Th","getHeaderProps","data-ouia-component-type","renderHeaderCellInfo","headerCellElement","renderResizableHeaderCell","getThProps","renderColumn","isCountColumn","getHeaderGroups","headerGroups","renderHeaderGroups","headerGroup","getHeaderGroupProps","headers","renderAtLevelInHeaderGroups","level","Thead","noWrap","LastLevel","SecondToLastLevel","NO_TABLE_CONTEXT_MENU_CLASS","Table","tableId","defaultCell","headerLevels","tableRef","numberOfRowsColumn","generateNumberOfRowsSubColumnRecursively","disableResizing","hideFilter","setTableHandlerTarget","toString","setTableHandlerAllowedOperations","setLastSelectedColumnIndex","setLastSelectedRowIndex","onColumnsUpdateCallback","onRowsUpdateCallback","onCellUpdate","columnId","updatedTableCells","onRowUpdate","updatedRow","updatedRows","defaultColumn","cellRef","initialValue","setValue","EditableCell","contextMenuIsAvailable","targetIsContainedInCurrentTable","contextMenuAvailableForTarget","tableHandlerStateUpdate","currentlyOpenedHandlerCallback","setCurrentlyOpenedHandlerCallback","useTable","onContextMenu","handlerOnHeaderIsAvailable","disableHandlerOnHeader","preventDefault","useBlockLayout","useResizeColumns","resizeNestedColumns","updatedWidth","updatedColumn","splice","finishedResizing","state","columnResizing","isResizingColumn","columnWidths","updatedColumnWidth","TableComposable","getTableProps","ref","RelationExpression","relationProps","spreadRelationExpressionDefinition","convertColumnsForTheTable","convertRowsForTheTable","tableRow","onSavingRows","onSavingColumns","columnInstance","ContextEntryExpression","expression","onExpressionResetting","expressionContainerRef","expressionChangedExternally","getLogicTypeSelectorRef","onLogicTypeUpdating","onLogicTypeResetting","getPlacementRef","ContextEntryExpressionCell","ContextEntryInfo","onContextEntryUpdate","editInfoPopoverLabel","entryName","setEntryName","entryDataType","setEntryDataType","onEntryNameOrDataTypeUpdate","ContextEntryInfoCell","setEntryInfo","DEFAULT_CONTEXT_ENTRY_NAME","DEFAULT_CONTEXT_ENTRY_DATA_TYPE","ContextExpression","entryInfoWidth","entryExpressionWidth","resultExpression","setResultExpression","infoWidth","setInfoWidth","expressionWidth","setExpressionWidth","setColumns","setRows","expressionColumn","prevExpressionColumn","getHeaderVisibility","updatedDefinition","Context","DecisionTableExpression","ListExpression","generateLiteralExpression","item","listItems","setListItems","listExpressionWidth","listTableGetRowKey","spreadListExpressionDefinition","List","listItem","DEFAULT_PARAMETER_DATA_TYPE","InvocationExpression","bindingEntries","invokedFunction","functionDefinition","spreadInvocationExpressionDefinition","onFunctionDefinitionChange","onFunctionDefinitionBlur","updatedExpressionColumn","LogicTypeSelector","nextId","isLogicTypeSelected","logicTypeSelected","setLogicTypeSelected","wrapperRef","xPos","setXPos","yPos","setYPos","contextMenuVisible","setContextMenuVisible","hideContextMenu","showContextMenu","pageX","pageY","contextMenuRef","contextMenuXPos","contextMenuYPos","contextMenuVisibility","setContextMenuVisibility","useContextMenuHandler","renderExpression","Relation","DecisionTable","Invocation","Function","getLogicTypesWithoutUndefined","renderLogicTypeItems","getArrowPlacement","getAppendToPlacement","onLogicTypeSelect","buildLogicSelectorMenu","executeClearAction","buildContextMenu","Button","isSmall","ButtonVariant","primary","onClick","ExpressionContainer","setSelectedExpression","updateExpressionNameAndDataType","updatedName","updatedDataType","previousSelectedExpression","BoxedExpressionEditor","defaults","dictionaries","initialLocale","navigator","language","ctx","Provider"],"mappings":"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","file":"static/js/main.ca82f9b1.chunk.js","sourcesContent":["/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum BuiltinAggregation {\n  Sum = \"+\",\n  Count = \"#\",\n  Min = \"<\",\n  Max = \">\",\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\nimport { ExpressionProps } from \"./ExpressionProps\";\nimport * as _ from \"lodash\";\nimport { DataRecord, Row } from \"react-table\";\nimport { TableHandlerConfiguration, TableOperation } from \"./Table\";\nimport { BoxedExpressionEditorI18n } from \"../i18n\";\n\nexport interface ContextEntryRecord {\n  entryInfo: {\n    /** Entry name */\n    name: string;\n    /** Entry data type */\n    dataType: DataType;\n  };\n  /** Entry expression */\n  entryExpression: ExpressionProps;\n  /** Label used for the popover triggered when editing info section */\n  editInfoPopoverLabel: string;\n  /** Callback to be invoked on expression resetting */\n  onExpressionResetting?: () => void;\n}\n\nexport type ContextEntries = ContextEntryRecord[];\n\nexport const DEFAULT_ENTRY_INFO_MIN_WIDTH = 150;\nexport const DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH = 370;\n\nexport const getHandlerConfiguration = (\n  i18n: BoxedExpressionEditorI18n,\n  groupName: string\n): TableHandlerConfiguration => [\n  {\n    group: groupName,\n    items: [\n      { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n      { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n      { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      { name: i18n.rowOperations.clear, type: TableOperation.RowClear },\n    ],\n  },\n];\n\nexport const generateNextAvailableEntryName = (\n  contextEntries: ContextEntries,\n  namePrefix: string,\n  lastIndex: number = contextEntries.length\n): string => {\n  const candidateName = `${namePrefix}-${lastIndex}`;\n  const entryWithCandidateName = _.find(contextEntries, { entryInfo: { name: candidateName } });\n  return entryWithCandidateName\n    ? generateNextAvailableEntryName(contextEntries, namePrefix, lastIndex + 1)\n    : candidateName;\n};\n\nexport const getEntryKey = (row: Row): string => (row.original as ContextEntryRecord).entryInfo.name;\n\nexport const resetEntry = (row: DataRecord): DataRecord => ({\n  entryInfo: row.entryInfo,\n  entryExpression: { uid: (row.entryExpression as ExpressionProps).uid },\n});\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum DataType {\n  Undefined = \"<Undefined>\",\n  Any = \"Any\",\n  Boolean = \"boolean\",\n  Context = \"context\",\n  Date = \"date\",\n  DateTime = \"date and time\",\n  DateTimeDuration = \"days and time duration\",\n  Number = \"number\",\n  String = \"string\",\n  Time = \"time\",\n  YearsMonthsDuration = \"years and months duration\",\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum HitPolicy {\n  Unique = \"UNIQUE\",\n  First = \"FIRST\",\n  Priority = \"PRIORITY\",\n  Any = \"ANY\",\n  Collect = \"COLLECT\",\n  RuleOrder = \"RULE ORDER\",\n  OutputOrder = \"OUTPUT ORDER\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogicType {\n  Undefined = \"<Undefined>\",\n  LiteralExpression = \"Literal expression\",\n  Context = \"Context\",\n  DecisionTable = \"Decision Table\",\n  Relation = \"Relation\",\n  Function = \"Function\",\n  Invocation = \"Invocation\",\n  List = \"List\",\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditorI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: BoxedExpressionEditorI18n = {\n  ...en_common,\n  choose: \"Choose...\",\n  clear: \"Clear\",\n  columnOperations: {\n    delete: \"Delete\",\n    insertLeft: \"Insert left\",\n    insertRight: \"Insert right\",\n  },\n  columns: \"COLUMNS\",\n  context: \"Context\",\n  contextEntry: \"CONTEXT ENTRY\",\n  dataType: \"Data Type\",\n  decisionTable: \"Decision Table\",\n  editContextEntry: \"Edit Context Entry\",\n  editExpression: \"Edit Expression\",\n  editParameter: \"Edit Parameter\",\n  editRelation: \"Edit Relation\",\n  enterFunction: \"Enter function\",\n  function: \"Function\",\n  invocation: \"Invocation\",\n  list: \"List\",\n  literalExpression: \"Literal expression\",\n  name: \"Name\",\n  parameters: \"PARAMETERS\",\n  relation: \"Relation\",\n  rowOperations: {\n    clear: \"Clear\",\n    delete: \"Delete\",\n    insertAbove: \"Insert above\",\n    insertBelow: \"Insert below\",\n  },\n  rows: \"ROWS\",\n  selectExpression: \"Select expression\",\n  selectLogicType: \"Select logic type\",\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { BoxedExpressionEditorI18n } from \"./BoxedExpressionEditorI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const boxedExpressionEditorI18nDefaults: I18nDefaults<BoxedExpressionEditorI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const boxedExpressionEditorDictionaries: I18nDictionaries<BoxedExpressionEditorI18n> = new Map([[\"en\", en]]);\nexport const BoxedExpressionEditorI18nContext = React.createContext<I18nContextType<BoxedExpressionEditorI18n>>(\n  {} as never\n);\n\nexport function useBoxedExpressionEditorI18n(): I18nContextType<BoxedExpressionEditorI18n> {\n  return useContext(BoxedExpressionEditorI18nContext);\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BoxedExpressionEditor } from \"./components\";\nimport * as React from \"react\";\nimport { ExpressionProps } from \"./api\";\nimport * as ReactDOM from \"react-dom\";\n\nexport * from \"./components\";\nexport * from \"./api\";\n\nwindow.renderBoxedExpressionEditor = (selector: string, definition: ExpressionProps) => {\n  ReactDOM.render(\n    <BoxedExpressionEditor expressionDefinition={{ selectedExpression: definition }} />,\n    document.getElementById(selector)\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// noinspection ES6PreferShortImport\nimport {\n  BoxedExpressionEditor,\n  ContextProps,\n  DataType,\n  ExpressionContainerProps,\n  ExpressionProps,\n  InvocationProps,\n  ListProps,\n  LiteralExpressionProps,\n  RelationProps,\n} from \"./boxed_expression_editor\";\n\nexport const App: React.FunctionComponent = () => {\n  //This definition comes directly from the decision node\n  const selectedExpression: ExpressionProps = {\n    uid: \"id1\",\n    logicType: \"Context\",\n    name: \"Expression Name\",\n    dataType: \"<Undefined>\",\n    contextEntries: [\n      {\n        entryInfo: {\n          name: \"ContextEntry-1\",\n          dataType: \"<Undefined>\",\n        },\n        entryExpression: {\n          uid: \"id2\",\n          logicType: \"Context\",\n          contextEntries: [\n            {\n              entryInfo: {\n                name: \"ContextEntry-1\",\n                dataType: \"<Undefined>\",\n              },\n              entryExpression: {},\n            },\n          ],\n          result: {\n            uid: \"id9\",\n          },\n        },\n      },\n    ],\n    result: {\n      uid: \"id3\",\n      logicType: \"Context\",\n      contextEntries: [\n        {\n          entryInfo: {\n            name: \"ContextEntry-1\",\n            dataType: \"<Undefined>\",\n          },\n          entryExpression: {\n            uid: \"id4\",\n            logicType: \"Context\",\n            contextEntries: [\n              {\n                entryInfo: {\n                  name: \"ContextEntry-1\",\n                  dataType: \"<Undefined>\",\n                },\n                entryExpression: {\n                  uid: \"id6\",\n                  logicType: \"Context\",\n                  contextEntries: [\n                    {\n                      entryInfo: {\n                        name: \"ContextEntry-1\",\n                        dataType: \"<Undefined>\",\n                      },\n                      entryExpression: {},\n                    },\n                  ],\n                  result: {\n                    uid: \"id11\",\n                  },\n                },\n              },\n            ],\n            result: {\n              uid: \"id7\",\n            },\n          },\n        },\n      ],\n      result: {\n        uid: \"id5\",\n      },\n    },\n  } as ExpressionProps;\n\n  const [updatedExpression, setUpdatedExpression] = useState(selectedExpression);\n\n  const expressionDefinition: ExpressionContainerProps = { selectedExpression };\n\n  //Defining global function that will be available in the Window namespace and used by the BoxedExpressionEditor component\n  window.beeApi = {\n    resetExpressionDefinition: (definition: ExpressionProps) => setUpdatedExpression(definition),\n    broadcastLiteralExpressionDefinition: (definition: LiteralExpressionProps) => setUpdatedExpression(definition),\n    broadcastRelationExpressionDefinition: (definition: RelationProps) => setUpdatedExpression(definition),\n    broadcastContextExpressionDefinition: (definition: ContextProps) => setUpdatedExpression(definition),\n    broadcastListExpressionDefinition: (definition: ListProps) => setUpdatedExpression(definition),\n    broadcastInvocationExpressionDefinition: (definition: InvocationProps) => setUpdatedExpression(definition),\n  };\n\n  return (\n    <div className=\"showcase\">\n      <div\n        style={{ position: \"fixed\", top: 0, left: 0, width: \"100vw\", height: \"100vh\", maxHeight: \"initial\" }}\n        className=\"boxed-expression\"\n      >\n        <BoxedExpressionEditor expressionDefinition={expressionDefinition} />\n      </div>\n      <div style={{ display: \"none\" }} className=\"updated-json\">\n        <p className=\"disclaimer\">\n          ⚠ Currently, JSON gets updated only for literal expression, relation, context, list and invocation logic types\n        </p>\n        <pre>{JSON.stringify(updatedExpression, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditor\";\nexport * from \"./BuiltinAggregation\";\nexport * from \"./ContextEntry\";\nexport * from \"./DataType\";\nexport * from \"./DecisionTableRule\";\nexport * from \"./ExpressionProps\";\nexport * from \"./HitPolicy\";\nexport * from \"./LogicType\";\nexport * from \"./Table\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./BoxedExpressionEditorI18n\";\nexport * from \"./setup\";\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"./DataType\";\nimport * as React from \"react\";\nimport { Column as ReactTableColumn, DataRecord, Row as ReactTableRow } from \"react-table\";\n\nexport interface TableProps {\n  /** Table identifier, useful for nested structures */\n  tableId?: string;\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** The prefix to be used for the column name */\n  columnPrefix?: string;\n  /** Optional label to be used for the edit popover that appears when clicking on column header */\n  editColumnLabel?: string;\n  /** For each column there is a default component to be used to render the related cell */\n  defaultCell?: {\n    [columnName: string]: React.FunctionComponent<CellProps>;\n  };\n  /** Table's columns */\n  columns: ReactTableColumn[];\n  /** Table's cells */\n  rows: DataRecord[];\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate?: (columns: ReactTableColumn[]) => void;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate?: (rows: DataRecord[]) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding?: () => DataRecord;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** Number of levels in the header, 0-based */\n  headerLevels?: number;\n  /** True, for skipping the creation in the DOM of the last defined header group */\n  skipLastHeaderGroup?: boolean;\n  /** Custom function for getting row key prop, and avoid using the row index */\n  getRowKey?: (row: ReactTableRow) => string;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey?: (column: ReactTableColumn) => string;\n  /** Custom function called for manually resetting a row */\n  resetRowCustomFunction?: (row: DataRecord) => DataRecord;\n}\n\n/** Possible status for the visibility of the Table's Header */\nexport enum TableHeaderVisibility {\n  Full,\n  LastLevel,\n  SecondToLastLevel,\n  None,\n}\n\n/** Table allowed operations */\nexport enum TableOperation {\n  ColumnInsertLeft,\n  ColumnInsertRight,\n  ColumnDelete,\n  RowInsertAbove,\n  RowInsertBelow,\n  RowDelete,\n  RowClear,\n}\n\nexport interface GroupOperations {\n  /** Name of the group (localized) */\n  group: string;\n  /** Collection of operations belonging to this group */\n  items: {\n    /** Name of the operation (localized) */\n    name: string;\n    /** Type of the operation */\n    type: TableOperation;\n  }[];\n}\n\nexport type TableHandlerConfiguration = GroupOperations[];\n\nexport type AllowedOperations = TableOperation[];\n\nexport type Row = string[];\n\nexport type Rows = Row[];\n\nexport interface Column {\n  /** Column name */\n  name: string;\n  /** Column data type */\n  dataType: DataType;\n  /** Column width */\n  width?: string | number;\n}\n\nexport type Columns = Column[];\n\nexport interface CellProps {\n  /** Cell's row properties */\n  row: { index: number };\n  /** Cell's column properties */\n  column: { id: string };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Popover } from \"@patternfly/react-core\";\nimport \"./PopoverMenu.css\";\n\nexport interface PopoverMenuProps {\n  /** Optional children element to be considered for triggering the popover */\n  children?: React.ReactElement;\n  /** Title of the popover menu */\n  title: string;\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The content of the popover itself */\n  body: React.ReactNode;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** Additional classname to be used for the popover */\n  className?: string;\n  /** True to have width automatically computed */\n  hasAutoWidth?: boolean;\n}\n\nexport const PopoverMenu: React.FunctionComponent<PopoverMenuProps> = ({\n  children,\n  arrowPlacement,\n  body,\n  title,\n  appendTo,\n  className,\n  hasAutoWidth,\n}: PopoverMenuProps) => {\n  return (\n    <Popover\n      data-ouia-component-id=\"expression-popover-menu\"\n      className={`popover-menu-selector${className ? \" \" + className : \"\"}`}\n      hasAutoWidth={hasAutoWidth}\n      position=\"bottom\"\n      distance={0}\n      id=\"menu-selector\"\n      reference={arrowPlacement}\n      appendTo={appendTo}\n      headerContent={\n        <div className=\"selector-menu-title\" data-ouia-component-id=\"expression-popover-menu-title\">\n          {title}\n        </div>\n      }\n      bodyContent={body}\n    >\n      {children}\n    </Popover>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\n\nexport interface BoxedExpressionGlobalContextProps {\n  boxedExpressionEditorRef: React.RefObject<HTMLDivElement>;\n  currentlyOpenedHandlerCallback: React.Dispatch<React.SetStateAction<boolean>>;\n  setCurrentlyOpenedHandlerCallback: React.Dispatch<\n    React.SetStateAction<React.Dispatch<React.SetStateAction<boolean>>>\n  >;\n}\n\nexport const BoxedExpressionGlobalContext = React.createContext<BoxedExpressionGlobalContextProps>(\n  {} as BoxedExpressionGlobalContextProps\n);\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./EditExpressionMenu.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataType, ExpressionProps } from \"../../api\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface EditExpressionMenuProps {\n  /** Optional children element to be considered for triggering the edit expression menu */\n  children?: React.ReactElement;\n  /** The node where to append the popover content */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /** A function which returns the HTMLElement where the popover's arrow should be placed */\n  arrowPlacement?: () => HTMLElement;\n  /** The label for the field 'Name' */\n  nameField?: string;\n  /** The label for the field 'Data Type' */\n  dataTypeField?: string;\n  /** The title of the popover menu */\n  title?: string;\n  /** The pre-selected data type */\n  selectedDataType?: DataType;\n  /** The pre-selected expression name */\n  selectedExpressionName: string;\n  /** Function to be called when the expression gets updated, passing the most updated version of it */\n  onExpressionUpdate: (expression: ExpressionProps) => void;\n}\n\nexport const EXPRESSION_NAME = \"Expression Name\";\n\nexport const EditExpressionMenu: React.FunctionComponent<EditExpressionMenuProps> = ({\n  children,\n  appendTo,\n  arrowPlacement,\n  title,\n  nameField,\n  dataTypeField,\n  selectedDataType = DataType.Undefined,\n  selectedExpressionName,\n  onExpressionUpdate,\n}: EditExpressionMenuProps) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n  const { i18n } = useBoxedExpressionEditorI18n();\n  title = title ?? i18n.editExpression;\n  nameField = nameField ?? i18n.name;\n  dataTypeField = dataTypeField ?? i18n.dataType;\n  appendTo = appendTo ?? globalContext.boxedExpressionEditorRef?.current ?? undefined;\n\n  const [dataTypeSelectOpen, setDataTypeSelectOpen] = useState(false);\n  const [dataType, setDataType] = useState(selectedDataType);\n  const [expressionName, setExpressionName] = useState(selectedExpressionName);\n\n  useEffect(() => {\n    setExpressionName(selectedExpressionName);\n  }, [selectedExpressionName]);\n\n  useEffect(() => {\n    setDataType(selectedDataType);\n  }, [selectedDataType]);\n\n  const onExpressionNameChange = useCallback(\n    (event) => {\n      setExpressionName(event.target.value);\n      if (event.type === \"blur\") {\n        onExpressionUpdate({\n          name: event.target.value,\n          dataType,\n        });\n      }\n    },\n    [dataType, onExpressionUpdate]\n  );\n\n  const onDataTypeSelect = useCallback(\n    (event, selection) => {\n      setDataTypeSelectOpen(false);\n      setDataType(selection);\n      onExpressionUpdate({\n        name: expressionName,\n        dataType: selection,\n      });\n    },\n    [expressionName, onExpressionUpdate]\n  );\n\n  const getDataTypes = useCallback(() => {\n    return _.map(Object.values(DataType), (key) => (\n      <SelectOption key={key} value={key}>\n        {key}\n      </SelectOption>\n    ));\n  }, []);\n\n  const onDataTypeFilter = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let input: RegExp;\n      try {\n        input = new RegExp(e.target.value, \"i\");\n      } catch (exception) {\n        return getDataTypes();\n      }\n      return e.target.value !== \"\" ? getDataTypes().filter((child) => input.test(child.props.value)) : getDataTypes();\n    },\n    [getDataTypes]\n  );\n\n  const onDataTypeSelectToggle = useCallback((isOpen) => setDataTypeSelectOpen(isOpen), []);\n\n  return (\n    <PopoverMenu\n      title={title}\n      arrowPlacement={arrowPlacement}\n      appendTo={appendTo}\n      body={\n        <div className=\"edit-expression-menu\">\n          <div className=\"expression-name\">\n            <label>{nameField}</label>\n            <input\n              type=\"text\"\n              id=\"expression-name\"\n              data-ouia-component-id=\"edit-expression-name\"\n              value={expressionName}\n              onChange={onExpressionNameChange}\n              onBlur={onExpressionNameChange}\n              className=\"form-control pf-c-form-control\"\n              placeholder={EXPRESSION_NAME}\n            />\n          </div>\n          <div className=\"expression-data-type\">\n            <label>{dataTypeField}</label>\n            <Select\n              ouiaId=\"edit-expression-data-type\"\n              variant={SelectVariant.typeahead}\n              typeAheadAriaLabel={i18n.choose}\n              onToggle={onDataTypeSelectToggle}\n              onSelect={onDataTypeSelect}\n              onFilter={onDataTypeFilter}\n              isOpen={dataTypeSelectOpen}\n              selections={dataType}\n              hasInlineFilter\n              inlineFilterPlaceholderText={i18n.choose}\n            >\n              {getDataTypes()}\n            </Select>\n          </div>\n        </div>\n      }\n    >\n      {children}\n    </PopoverMenu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as _ from \"lodash\";\n\nexport class Cell {\n  private static DEFAULT_WIDTH = 250; // TODO pick width from React\n  private static PADDING = 14; // TODO: we could get it via JS, performance reasons we don't\n\n  private id: string | undefined;\n  private lastColumn: boolean | undefined;\n  private rect: DOMRect | undefined;\n\n  constructor(public element: HTMLElement, public children: Cell[], public depth: number) {}\n\n  getId(): string {\n    if (this.id === undefined) {\n      this.id = _.first([].slice.call(this.element.classList).filter((c: string) => c.match(/uuid-/g))) || \"\";\n    }\n    return this.id;\n  }\n\n  getRect(): DOMRect {\n    if (this.rect === undefined) {\n      this.rect = this.element.getBoundingClientRect();\n    }\n    return this.rect;\n  }\n\n  isLastColumn(): boolean {\n    if (this.lastColumn === undefined) {\n      const parent = this.element.closest(\"tr\");\n      const isLast = parent?.lastChild == this.element.closest(\"th, td\");\n      this.lastColumn = isLast;\n    }\n    return this.lastColumn;\n  }\n\n  setWidth(width: number): void {\n    const cellWidth = width < 100 ? 100 : width;\n\n    // propagate to React state\n    document.dispatchEvent(new CustomEvent(this.getId(), { detail: { width: cellWidth } }));\n\n    // set on element to the \"live\" resize\n    this.element.style.width = cellWidth + \"px\";\n  }\n\n  refreshWidthAsParent(): void {\n    this.setWidth(this.fetchChildWidth() + Cell.PADDING);\n  }\n\n  refreshWidthAsLastColumn(): void {\n    if (!this.isLastColumn()) {\n      return;\n    }\n\n    const parentRect = this.element.closest(\"tr\")?.getBoundingClientRect();\n    if (parentRect === undefined) {\n      return;\n    }\n\n    const cellRect = this.element.getBoundingClientRect();\n    const width = parentRect.right - cellRect.x - 15;\n\n    this.setWidth(width + Cell.PADDING);\n  }\n\n  /**\n   * [TODO]\n   * We cannot calculate as css styles may change\n   */\n  private fetchChildWidth() {\n    const thead = this.element.querySelector(\"thead\");\n    return thead?.getBoundingClientRect().width || Cell.DEFAULT_WIDTH;\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Cell } from \"./\";\n\nexport class DOMSession {\n  private static CELL_CSS_SELCTOR = \".react-resizable\";\n\n  private cells: Cell[] | undefined;\n\n  getCells(): Cell[] {\n    if (this.cells === undefined) {\n      this.cells = this.buildCells();\n    }\n    return this.cells;\n  }\n\n  private buildCells() {\n    const cells: Cell[] = [];\n    this.fetchCellElements(document.body).forEach((cellElement) => {\n      this.buildCell(cellElement, cells, 0);\n    });\n    return cells;\n  }\n\n  private buildCell(htmlElement: HTMLElement, cells: Cell[], depthLevel: number): Cell {\n    const exitingElement = cells.find((c) => c.element === htmlElement);\n    if (exitingElement) {\n      return exitingElement;\n    }\n\n    const cell = new Cell(\n      htmlElement,\n      this.fetchCellElements(htmlElement)\n        .map((child) => this.buildCell(child, cells, depthLevel + 1))\n        .filter((c) => c.depth == depthLevel + 1),\n      depthLevel\n    );\n\n    cells.push(cell);\n\n    return cell;\n  }\n\n  private fetchCellElements(parent: HTMLElement): HTMLElement[] {\n    const htmlElements = parent.querySelectorAll(DOMSession.CELL_CSS_SELCTOR);\n    return [].slice.call(htmlElements);\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMSession, Cell } from \"./\";\n\n/**\n * [TODO]\n * React state + hooks abstractions have a level of granularity that limits the\n * frame hate in the context of the boxed expression component.\n * Setting targets/dependencies for effects would generate a huge amount of\n * function calls.\n * This component intentionally access DOM logic, but it should be spread across\n * the component.\n */\nexport const applyDOMSupervisor = (): void => {\n  new SupervisorExecution().execute();\n};\n\nclass SupervisorExecution {\n  domSession: DOMSession;\n\n  constructor() {\n    this.domSession = new DOMSession();\n  }\n\n  updateSize(cell: Cell) {\n    if (cell.children.length > 0) {\n      cell.refreshWidthAsParent();\n    }\n  }\n\n  updateLastColumns(cell: Cell) {\n    cell.refreshWidthAsLastColumn();\n  }\n\n  execute() {\n    const cells = this.domSession.getCells();\n\n    const p1 = performance.now();\n    for (let index = 0; index < 10; index++) {\n      cells.sort((c1, c2) => c2.depth - c1.depth).forEach(this.updateSize);\n      cells.sort((c1, c2) => c1.depth - c2.depth).forEach(this.updateLastColumns);\n    }\n    const p2 = performance.now();\n    console.log(p2 - p1 + \"ms\");\n  }\n}\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Resizer.css\";\nimport * as React from \"react\";\nimport { useCallback, useMemo, useState, useLayoutEffect } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\nimport { v4 as uuid } from \"uuid\";\nimport * as _ from \"lodash\";\nimport { Cell, DOMSession } from \"./dom\";\n\nexport interface ResizerProps {\n  width: number;\n  height: number | \"100%\";\n  minWidth: number;\n  minHeight?: number;\n  onHorizontalResizeStop: (width: number) => void;\n  children?: React.ReactElement;\n}\n\nexport const DRAWER_SPLITTER_ELEMENT = (\n  <div className=\"pf-c-drawer__splitter pf-m-vertical\">\n    <div className=\"pf-c-drawer__splitter-handle\" />\n  </div>\n);\n\nexport const Resizer: React.FunctionComponent<ResizerProps> = ({\n  children,\n  height,\n  minHeight = 0,\n  minWidth,\n  onHorizontalResizeStop,\n  width,\n}) => {\n  const targetHeight = height === \"100%\" ? 0 : height;\n  const resizerHandler = useMemo(() => <div className=\"pf-c-drawer\">{DRAWER_SPLITTER_ELEMENT}</div>, []);\n  const id = useMemo(() => `uuid-${uuid()}`, []);\n  const [w, setW] = useState(300);\n  const x: Cell[] = [];\n  const [cells, setCells] = useState(x);\n  const [initalW, setInitialW] = useState(0);\n\n  useLayoutEffect(() => {\n    function listener(event: CustomEvent) {\n      const width = event.detail.width;\n      setW(width);\n    }\n\n    document.addEventListener(id, listener);\n    return () => {\n      document.removeEventListener(id, listener);\n    };\n  }, [id]);\n\n  const onResizeStart = useCallback(() => {\n    const applicableCells: Cell[] = [];\n    const allCells = new DOMSession().getCells();\n    const currentCell = allCells.find((c) => c.getId() === id)!;\n    const initialWidth = currentCell.getRect().width;\n    const parent = currentCell.element.closest(\"table\");\n\n    let someLast = false;\n\n    if (currentCell.isLastColumn()) {\n      allCells\n        .filter((cell) => cell.isLastColumn())\n        .forEach((cell) => {\n          applicableCells.push(cell);\n        });\n    } else {\n      allCells.forEach((cell) => {\n        const cellContainsCurrent =\n          cell.getRect().x <= currentCell.getRect().x && cell.getRect().right >= currentCell.getRect().right;\n\n        if ((parent?.contains(cell.element) || cell.element?.contains(currentCell.element)) && cellContainsCurrent) {\n          applicableCells.push(cell);\n          if (cell.isLastColumn()) {\n            someLast = true;\n          }\n        }\n      });\n\n      if (someLast) {\n        allCells\n          .filter((cell) => cell.isLastColumn() && !parent?.contains(cell.element))\n          .forEach((cell) => {\n            applicableCells.push(cell);\n          });\n      }\n    }\n\n    applicableCells.forEach((cell) => {\n      cell.element.setAttribute(\"data-initial-w\", cell.element.style.width);\n    });\n\n    setCells(applicableCells);\n    setInitialW(initialWidth);\n  }, [id]);\n\n  const onResize = useCallback(\n    (_e, data) => {\n      const width = data.size.width < 100 ? 100 : data.size.width;\n      cells.forEach((c) => {\n        const delta = width - initalW;\n        if (c.getId() !== id) {\n          c.element.style.width = parseInt(c.element.getAttribute(\"data-initial-w\") || \"\") + delta + \"px\";\n        }\n      }, []);\n    },\n    [cells, id, initalW]\n  );\n\n  const onResizeStop = useCallback(\n    (_e, data) => {\n      cells.forEach((c) => {\n        const width = data.size.width < 100 ? 100 : data.size.width;\n        const delta = width - initalW;\n        document.dispatchEvent(\n          new CustomEvent(c.getId(), {\n            detail: { width: parseInt(c.element.getAttribute(\"data-initial-w\") || \"\") + delta },\n          })\n        );\n      }, []);\n    },\n    [cells, initalW]\n  );\n\n  return useMemo(\n    () => (\n      <ResizableBox\n        className={`${height === \"100%\" ? \"height-based-on-content\" : \"\"} ${id}`}\n        width={w}\n        height={targetHeight}\n        minConstraints={[100, minHeight]}\n        axis=\"x\"\n        onResizeStop={onResizeStop}\n        onResize={onResize}\n        onResizeStart={onResizeStart}\n        handle={resizerHandler}\n      >\n        {children}\n      </ResizableBox>\n    ),\n    [height, id, w, targetHeight, minHeight, onResizeStop, onResize, onResizeStart, resizerHandler, children]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Resizer.css\";\nimport * as React from \"react\";\nimport { useEffect, useContext } from \"react\";\nimport { applyDOMSupervisor } from \"./dom\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface ResizerSupervisorProps {\n  children?: React.ReactElement;\n}\n\nexport const ResizerSupervisor: React.FunctionComponent<ResizerSupervisorProps> = ({ children }) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n  useEffect(() => applyDOMSupervisor(), [globalContext]);\n  return <div>{children}</div>;\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LiteralExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { DataType, ExpressionProps, LiteralExpressionProps, LogicType } from \"../../api\";\nimport { TextArea } from \"@patternfly/react-core\";\nimport { EditExpressionMenu, EXPRESSION_NAME } from \"../EditExpressionMenu\";\nimport { Resizer } from \"../Resizer\";\n\nexport const LiteralExpression: React.FunctionComponent<LiteralExpressionProps> = ({\n  uid,\n  content = \"\",\n  dataType = DataType.Undefined,\n  name = EXPRESSION_NAME,\n  onUpdatingNameAndDataType,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n  width,\n}: LiteralExpressionProps) => {\n  const HEADER_WIDTH = 250;\n  const HEADER_HEIGHT = 40;\n\n  const expressionName = useRef<string>(name);\n  const expressionDataType = useRef<DataType>(dataType);\n  const literalExpressionContent = useRef<string>(content);\n  const literalExpressionWidth = useRef<number>(width || HEADER_WIDTH);\n\n  const spreadLiteralExpressionDefinition = useCallback(() => {\n    const expressionDefinition: LiteralExpressionProps = {\n      uid,\n      name: expressionName.current,\n      dataType: expressionDataType.current,\n      logicType: LogicType.LiteralExpression,\n      content: literalExpressionContent.current,\n      ...(!isHeadless && literalExpressionWidth.current !== HEADER_WIDTH\n        ? { width: literalExpressionWidth.current }\n        : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastLiteralExpressionDefinition?.(expressionDefinition);\n  }, [isHeadless, onUpdatingRecursiveExpression, uid]);\n\n  const onExpressionUpdate = useCallback(\n    ({ dataType = DataType.Undefined, name = EXPRESSION_NAME }: ExpressionProps) => {\n      expressionName.current = name;\n      expressionDataType.current = dataType;\n      onUpdatingNameAndDataType?.(name, dataType);\n      spreadLiteralExpressionDefinition();\n    },\n    [onUpdatingNameAndDataType, spreadLiteralExpressionDefinition]\n  );\n\n  const onContentChange = useCallback(\n    (event) => {\n      literalExpressionContent.current = event.target.value;\n      spreadLiteralExpressionDefinition();\n    },\n    [spreadLiteralExpressionDefinition]\n  );\n\n  const onHorizontalResizeStop = useCallback(\n    (width) => {\n      literalExpressionWidth.current = width;\n      spreadLiteralExpressionDefinition();\n    },\n    [spreadLiteralExpressionDefinition]\n  );\n\n  const renderElementWithResizeHandler = useCallback(\n    (element) => (\n      <Resizer\n        width={literalExpressionWidth.current}\n        height={HEADER_HEIGHT}\n        minWidth={HEADER_WIDTH}\n        minHeight={HEADER_HEIGHT}\n        onHorizontalResizeStop={onHorizontalResizeStop}\n      >\n        {element}\n      </Resizer>\n    ),\n    [onHorizontalResizeStop]\n  );\n\n  const renderLiteralExpressionHeader = useMemo(() => {\n    return (\n      <div className=\"literal-expression-header\">\n        {renderElementWithResizeHandler(\n          <EditExpressionMenu\n            selectedExpressionName={expressionName.current}\n            selectedDataType={expressionDataType.current}\n            onExpressionUpdate={onExpressionUpdate}\n          >\n            <div className=\"expression-info\">\n              <p className=\"expression-name pf-u-text-truncate\">{expressionName.current}</p>\n              <p className=\"expression-data-type pf-u-text-truncate\">({expressionDataType.current})</p>\n            </div>\n          </EditExpressionMenu>\n        )}\n      </div>\n    );\n  }, [onExpressionUpdate, renderElementWithResizeHandler]);\n\n  const getBodyContent = useMemo(\n    () => (\n      <TextArea\n        defaultValue={literalExpressionContent.current}\n        onBlur={onContentChange}\n        aria-label=\"literal-expression-content\"\n      />\n    ),\n    [onContentChange]\n  );\n\n  useEffect(() => {\n    /** Function executed only the first time the component is loaded */\n    spreadLiteralExpressionDefinition();\n  }, [spreadLiteralExpressionDefinition]);\n\n  return (\n    <div className=\"literal-expression\">\n      {!isHeadless ? renderLiteralExpressionHeader : null}\n      <div className=\"literal-expression-body\">{getBodyContent}</div>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { Tbody, Td, Tr } from \"@patternfly/react-table\";\nimport { TableHeaderVisibility } from \"../../api\";\nimport { Cell, Column, Row, TableInstance } from \"react-table\";\nimport { DRAWER_SPLITTER_ELEMENT } from \"../Resizer\";\n\nexport interface TableBodyProps {\n  /** Table instance */\n  tableInstance: TableInstance;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** Optional children element to be appended below the table content */\n  children?: React.ReactElement[];\n  /** Custom function for getting row key prop, and avoid using the row index */\n  getRowKey: (row: Row) => string;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey: (column: Column) => string;\n}\n\nexport const TableBody: React.FunctionComponent<TableBodyProps> = ({\n  tableInstance,\n  children,\n  headerVisibility = TableHeaderVisibility.Full,\n  getRowKey,\n  getColumnKey,\n}) => {\n  const renderCellResizer = useCallback(\n    (cell: Cell) => (\n      <div\n        className=\"pf-c-drawer drawer-on-body\"\n        {...(cell.column.canResizeOnCell ? cell.column.getResizerProps() : {})}\n      >\n        {DRAWER_SPLITTER_ELEMENT}\n      </div>\n    ),\n    []\n  );\n\n  const renderCell = useCallback(\n    (cellIndex: number, cell: Cell, rowIndex: number) => {\n      const cellType = cellIndex === 0 ? \"counter-cell\" : \"data-cell\";\n      const canResize = cell.column.canResizeOnCell ? \"has-resizer\" : \"\";\n      return (\n        <Td\n          {...(cellIndex === 0 ? {} : cell.getCellProps())}\n          {...tableInstance.getTdProps(cellIndex, rowIndex)}\n          key={`${getColumnKey(cell.column)}-${cellIndex}`}\n          data-ouia-component-id={\"expression-column-\" + cellIndex}\n          className={`${cellType} ${canResize}`}\n        >\n          {cellIndex === 0 ? rowIndex + 1 : cell.render(\"Cell\")}\n          {cell.column.canResizeOnCell ? renderCellResizer(cell) : null}\n        </Td>\n      );\n    },\n    [getColumnKey, renderCellResizer, tableInstance]\n  );\n\n  const renderBodyRow = useCallback(\n    (row: Row, rowIndex: number) => (\n      <Tr\n        className=\"table-row\"\n        {...row.getRowProps()}\n        key={`${getRowKey(row)}-${rowIndex}`}\n        ouiaId={\"expression-row-\" + rowIndex}\n      >\n        {row.cells.map((cell: Cell, cellIndex: number) => renderCell(cellIndex, cell, rowIndex))}\n      </Tr>\n    ),\n    [getRowKey, renderCell]\n  );\n\n  const renderAdditiveRow = useMemo(\n    () => (\n      <Tr className=\"table-row additive-row\">\n        <Td role=\"cell\" className=\"empty-cell\">\n          <br />\n        </Td>\n        {children?.map((child, childIndex) => {\n          return (\n            <Td\n              role=\"cell\"\n              key={childIndex}\n              className=\"row-remainder-content\"\n              style={\n                {\n                  // width: tableInstance.allColumns[childIndex + 1].width,\n                  // minWidth: tableInstance.allColumns[childIndex + 1].minWidth,\n                }\n              }\n            >\n              {child}\n            </Td>\n          );\n        })}\n      </Tr>\n    ),\n    [children, tableInstance.allColumns]\n  );\n\n  return (\n    <Tbody\n      className={`${headerVisibility === TableHeaderVisibility.None ? \"missing-header\" : \"\"}`}\n      {...tableInstance.getTableBodyProps()}\n    >\n      {tableInstance.rows.map((row: Row, rowIndex: number) => {\n        tableInstance.prepareRow(row);\n        return renderBodyRow(row, rowIndex);\n      })}\n      {children ? renderAdditiveRow : null}\n    </Tbody>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./TableHandlerMenu.css\";\nimport * as React from \"react\";\nimport { Menu, MenuGroup, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport { AllowedOperations, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\n\nexport interface TableHandlerMenuProps {\n  /** Handler menu groups and items */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Dynamic Allowed operations */\n  allowedOperations: AllowedOperations;\n  /** Function to be executed when an operation gets selected */\n  onOperation: (operation: TableOperation) => void;\n}\n\nexport const TableHandlerMenu: React.FunctionComponent<TableHandlerMenuProps> = ({\n  handlerConfiguration,\n  allowedOperations,\n  onOperation,\n}) => {\n  return (\n    <Menu\n      ouiaId=\"expression-table-handler-menu\"\n      className=\"table-handler-menu\"\n      onSelect={(event, itemId) => onOperation(itemId)}\n    >\n      {handlerConfiguration.map((groupOperation) => (\n        <MenuGroup\n          key={groupOperation.group}\n          label={groupOperation.group}\n          className={\n            _.every(groupOperation.items, (operation) => !_.includes(allowedOperations, operation.type))\n              ? \"no-allowed-actions-in-group\"\n              : \"\"\n          }\n        >\n          <MenuList>\n            {groupOperation.items.map((operation) => (\n              <MenuItem\n                data-ouia-component-id={\"expression-table-handler-menu-\" + operation.name}\n                key={operation.type}\n                itemId={operation.type}\n                isDisabled={!_.includes(allowedOperations, operation.type)}\n              >\n                {operation.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </MenuGroup>\n      ))}\n    </Menu>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { DataType, TableHandlerConfiguration, TableOperation } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\nimport { Popover } from \"@patternfly/react-core\";\nimport { TableHandlerMenu } from \"./TableHandlerMenu\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport interface TableHandlerProps {\n  /** The prefix to be used for the column name */\n  columnPrefix: string;\n  /** Columns instance */\n  tableColumns: React.MutableRefObject<Column[]>;\n  /** Last selected column index */\n  lastSelectedColumnIndex: number;\n  /** Last selected row index */\n  lastSelectedRowIndex: number;\n  /** Rows instance */\n  tableRows: React.MutableRefObject<DataRecord[]>;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate: (rows: DataRecord[]) => void;\n  /** Function to be executed when adding a new row to the table */\n  onRowAdding: () => DataRecord;\n  /** Show/hide table handler */\n  showTableHandler: boolean;\n  /** Function to programmatically show/hide table handler */\n  setShowTableHandler: React.Dispatch<React.SetStateAction<boolean>>;\n  /** Target for showing the table handler  */\n  tableHandlerTarget: HTMLElement;\n  /** Custom configuration for the table handler */\n  handlerConfiguration: TableHandlerConfiguration;\n  /** Table handler allowed operations */\n  tableHandlerAllowedOperations: TableOperation[];\n  /** Custom function called for manually resetting a row */\n  resetRowCustomFunction?: (row: DataRecord) => DataRecord;\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n}\n\nexport const TableHandler: React.FunctionComponent<TableHandlerProps> = ({\n  columnPrefix,\n  tableColumns,\n  lastSelectedColumnIndex,\n  lastSelectedRowIndex,\n  tableRows,\n  onRowsUpdate,\n  onRowAdding,\n  showTableHandler,\n  setShowTableHandler,\n  tableHandlerTarget,\n  handlerConfiguration,\n  tableHandlerAllowedOperations,\n  resetRowCustomFunction = () => ({}),\n  onColumnsUpdate,\n}) => {\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const [selectedColumnIndex, setSelectedColumnIndex] = useState(lastSelectedColumnIndex);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(lastSelectedRowIndex);\n\n  useEffect(() => {\n    setSelectedColumnIndex(lastSelectedColumnIndex);\n  }, [lastSelectedColumnIndex]);\n\n  useEffect(() => {\n    setSelectedRowIndex(lastSelectedRowIndex);\n  }, [lastSelectedRowIndex]);\n\n  const insertBefore = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index), element, ...elements.slice(index)];\n  };\n\n  const insertAfter = <T extends unknown>(elements: T[], index: number, element: T) => {\n    return [...elements.slice(0, index + 1), element, ...elements.slice(index + 1)];\n  };\n\n  const deleteAt = <T extends unknown>(elements: T[], index: number) => {\n    return [...elements.slice(0, index), ...elements.slice(index + 1)];\n  };\n\n  const clearAt = <T extends unknown>(elements: T[], index: number) => {\n    return [\n      ...elements.slice(0, index),\n      resetRowCustomFunction(elements[index] as DataRecord),\n      ...elements.slice(index + 1),\n    ];\n  };\n\n  const generateNextAvailableColumnName: (lastIndex: number) => string = useCallback(\n    (lastIndex) => {\n      const candidateName = `${columnPrefix}${lastIndex}`;\n      const columnWithCandidateName = _.find(tableColumns.current, { accessor: candidateName });\n      return columnWithCandidateName ? generateNextAvailableColumnName(lastIndex + 1) : candidateName;\n    },\n    [columnPrefix, tableColumns]\n  );\n\n  const generateNextAvailableColumn = useCallback(\n    (columns: Column[]) => {\n      return {\n        accessor: generateNextAvailableColumnName(columns.length),\n        label: generateNextAvailableColumnName(columns.length),\n        dataType: DataType.Undefined,\n      } as ColumnInstance;\n    },\n    [generateNextAvailableColumnName]\n  );\n\n  /** These column operations have impact also on the collection of cells */\n  const updateColumnsThenRows = useCallback(\n    (columns) => {\n      onColumnsUpdate(columns);\n      onRowsUpdate(tableRows.current);\n    },\n    [onColumnsUpdate, onRowsUpdate, tableRows]\n  );\n\n  const handlingOperation = useCallback(\n    (tableOperation: TableOperation) => {\n      switch (tableOperation) {\n        case TableOperation.ColumnInsertLeft:\n          updateColumnsThenRows(\n            insertBefore(tableColumns.current, selectedColumnIndex, generateNextAvailableColumn(tableColumns.current))\n          );\n          break;\n        case TableOperation.ColumnInsertRight:\n          updateColumnsThenRows(\n            insertAfter(tableColumns.current, selectedColumnIndex, generateNextAvailableColumn(tableColumns.current))\n          );\n          break;\n        case TableOperation.ColumnDelete:\n          updateColumnsThenRows(deleteAt(tableColumns.current, selectedColumnIndex));\n          break;\n        case TableOperation.RowInsertAbove:\n          onRowsUpdate(insertBefore(tableRows.current, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowInsertBelow:\n          onRowsUpdate(insertAfter(tableRows.current, selectedRowIndex, onRowAdding()));\n          break;\n        case TableOperation.RowDelete:\n          onRowsUpdate(deleteAt(tableRows.current, selectedRowIndex));\n          break;\n        case TableOperation.RowClear:\n          onRowsUpdate(clearAt(tableRows.current, selectedRowIndex));\n          break;\n      }\n      setShowTableHandler(false);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      generateNextAvailableColumn,\n      updateColumnsThenRows,\n      onRowAdding,\n      onRowsUpdate,\n      selectedColumnIndex,\n      selectedRowIndex,\n      setShowTableHandler,\n      tableColumns,\n      tableRows,\n    ]\n  );\n\n  return useMemo(\n    () => (\n      <Popover\n        className=\"table-handler\"\n        hasNoPadding\n        showClose={false}\n        distance={5}\n        position={\"right\"}\n        isVisible={showTableHandler}\n        shouldClose={() => setShowTableHandler(false)}\n        shouldOpen={(showFunction) => showFunction?.()}\n        reference={() => tableHandlerTarget}\n        appendTo={globalContext.boxedExpressionEditorRef?.current ?? undefined}\n        bodyContent={\n          <TableHandlerMenu\n            handlerConfiguration={handlerConfiguration}\n            allowedOperations={tableHandlerAllowedOperations}\n            onOperation={handlingOperation}\n          />\n        }\n      />\n    ),\n    [\n      showTableHandler,\n      globalContext.boxedExpressionEditorRef,\n      handlerConfiguration,\n      tableHandlerAllowedOperations,\n      handlingOperation,\n      setShowTableHandler,\n      tableHandlerTarget,\n    ]\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useMemo } from \"react\";\nimport { Th, Thead, Tr } from \"@patternfly/react-table\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord, HeaderGroup, TableInstance } from \"react-table\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { DataType, TableHeaderVisibility } from \"../../api\";\n// import { DRAWER_SPLITTER_ELEMENT } from \"../Resizer\";\nimport { Resizer } from \"../Resizer\";\n\nexport interface TableHeaderProps {\n  /** Table instance */\n  tableInstance: TableInstance;\n  /** Rows instance */\n  tableRows: React.MutableRefObject<DataRecord[]>;\n  /** Function to be executed when one or more rows are modified */\n  onRowsUpdate: (rows: DataRecord[]) => void;\n  /** Optional label to be used for the edit popover that appears when clicking on column header */\n  editColumnLabel?: string;\n  /** The way in which the header will be rendered */\n  headerVisibility?: TableHeaderVisibility;\n  /** True, for skipping the creation in the DOM of the last defined header group */\n  skipLastHeaderGroup: boolean;\n  /** Custom function for getting column key prop, and avoid using the column index */\n  getColumnKey: (column: Column) => string;\n  /** Columns instance */\n  tableColumns: React.MutableRefObject<Column[]>;\n  /** Function to be executed when columns are modified */\n  onColumnsUpdate: (columns: Column[]) => void;\n}\n\nexport const TableHeader: React.FunctionComponent<TableHeaderProps> = ({\n  tableInstance,\n  tableRows,\n  onRowsUpdate,\n  editColumnLabel,\n  headerVisibility = TableHeaderVisibility.Full,\n  skipLastHeaderGroup,\n  getColumnKey,\n  tableColumns,\n  onColumnsUpdate,\n}) => {\n  const updateColumnNameInRows = useCallback(\n    (prevColumnName: string, newColumnName: string) =>\n      onRowsUpdate(\n        _.map(tableRows.current, (tableCells) => {\n          const assignedCellValue = tableCells[prevColumnName]!;\n          delete tableCells[prevColumnName];\n          tableCells[newColumnName] = assignedCellValue;\n          return tableCells;\n        })\n      ),\n    [onRowsUpdate, tableRows]\n  );\n\n  const onColumnNameOrDataTypeUpdate = useCallback(\n    (columnIndex: number) => {\n      return ({ name = \"\", dataType = DataType.Undefined }) => {\n        const prevColumnName = (tableColumns.current[columnIndex] as ColumnInstance).accessor as string;\n        const updatedTableColumns = [...tableColumns.current] as ColumnInstance[];\n        updatedTableColumns[columnIndex].label = name;\n        updatedTableColumns[columnIndex].accessor = name;\n        updatedTableColumns[columnIndex].dataType = dataType;\n        onColumnsUpdate(updatedTableColumns);\n        if (name !== prevColumnName) {\n          updateColumnNameInRows(prevColumnName, name);\n        }\n      };\n    },\n    [onColumnsUpdate, tableColumns, updateColumnNameInRows]\n  );\n\n  const renderCountColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) => (\n      <Th\n        {...column.getHeaderProps()}\n        className=\"fixed-column no-clickable-cell\"\n        key={`${getColumnKey(column)}-${columnIndex}`}\n      >\n        <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n          {column.label}\n        </div>\n      </Th>\n    ),\n    [getColumnKey]\n  );\n\n  const renderHeaderCellInfo = useCallback(\n    (column) => (\n      <div className=\"header-cell-info\" data-ouia-component-type=\"expression-column-header-cell-info\">\n        {column.headerCellElement ? column.headerCellElement : <p className=\"pf-u-text-truncate\">{column.label}</p>}\n        {column.dataType ? <p className=\"pf-u-text-truncate data-type\">({column.dataType})</p> : null}\n      </div>\n    ),\n    []\n  );\n\n  const onHorizontalResizeStop = useCallback((width) => {\n    // console.log(\">>>>>\" + width);\n  }, []);\n\n  const renderResizableHeaderCell = useCallback(\n    (column, columnIndex) => (\n      <Th\n        {...column.getHeaderProps()}\n        {...tableInstance.getThProps(column, columnIndex)}\n        className={`resizable-column ${!column.dataType ? \"no-clickable-cell\" : null}`}\n        key={`${getColumnKey(column)}-${columnIndex}`}\n      >\n        <Resizer width={300} height=\"100%\" minWidth={10} onHorizontalResizeStop={onHorizontalResizeStop}>\n          <div className=\"header-cell\" data-ouia-component-type=\"expression-column-header\">\n            {column.dataType ? (\n              <EditExpressionMenu\n                title={editColumnLabel}\n                selectedExpressionName={column.label}\n                selectedDataType={column.dataType}\n                onExpressionUpdate={onColumnNameOrDataTypeUpdate(columnIndex)}\n                key={`${getColumnKey(column)}-${columnIndex}`}\n              >\n                {renderHeaderCellInfo(column)}\n              </EditExpressionMenu>\n            ) : (\n              renderHeaderCellInfo(column)\n            )}\n          </div>\n        </Resizer>\n      </Th>\n    ),\n    [editColumnLabel, getColumnKey, onColumnNameOrDataTypeUpdate, renderHeaderCellInfo, tableInstance]\n  );\n\n  const renderColumn = useCallback(\n    (column: ColumnInstance, columnIndex: number) =>\n      column.isCountColumn ? renderCountColumn(column, columnIndex) : renderResizableHeaderCell(column, columnIndex),\n    [renderCountColumn, renderResizableHeaderCell]\n  );\n\n  const getHeaderGroups = useCallback(\n    (tableInstance) => {\n      return skipLastHeaderGroup ? _.dropRight(tableInstance.headerGroups) : tableInstance.headerGroups;\n    },\n    [skipLastHeaderGroup]\n  );\n\n  const renderHeaderGroups = useMemo(\n    () =>\n      getHeaderGroups(tableInstance).map((headerGroup: HeaderGroup) => (\n        <Tr key={headerGroup.getHeaderGroupProps().key} {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n        </Tr>\n      )),\n    [getHeaderGroups, renderColumn, tableInstance]\n  );\n\n  const renderAtLevelInHeaderGroups = useCallback(\n    (level: number) => (\n      <Tr>\n        {_.nth(\n          tableInstance.headerGroups as HeaderGroup[],\n          level\n        )!.headers.map((column: ColumnInstance, columnIndex: number) => renderColumn(column, columnIndex))}\n      </Tr>\n    ),\n    [renderColumn, tableInstance.headerGroups]\n  );\n\n  switch (headerVisibility) {\n    case TableHeaderVisibility.Full:\n      return <Thead noWrap>{renderHeaderGroups}</Thead>;\n    case TableHeaderVisibility.LastLevel:\n      return <Thead noWrap>{renderAtLevelInHeaderGroups(-1)}</Thead>;\n    case TableHeaderVisibility.SecondToLastLevel:\n      return <Thead noWrap>{renderAtLevelInHeaderGroups(-2)}</Thead>;\n    default:\n      return null;\n  }\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./Table.css\";\nimport {\n  Column,\n  ColumnInstance,\n  ContextMenuEvent,\n  DataRecord,\n  useBlockLayout,\n  useResizeColumns,\n  useTable,\n} from \"react-table\";\nimport { TableComposable } from \"@patternfly/react-table\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { EditableCell } from \"./EditableCell\";\nimport { TableOperation, TableProps } from \"../../api\";\nimport * as _ from \"lodash\";\nimport { TableBody } from \"./TableBody\";\nimport { TableHandler } from \"./TableHandler\";\nimport { TableHeader } from \"./TableHeader\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\n\nexport const NO_TABLE_CONTEXT_MENU_CLASS = \"no-table-context-menu\";\n\nexport const Table: React.FunctionComponent<TableProps> = ({\n  tableId,\n  children,\n  columnPrefix = \"column-\",\n  editColumnLabel,\n  onColumnsUpdate,\n  onRowsUpdate,\n  onRowAdding = () => ({}),\n  defaultCell,\n  rows,\n  columns,\n  handlerConfiguration,\n  headerVisibility,\n  headerLevels = 0,\n  skipLastHeaderGroup = false,\n  getRowKey = (row) => row.id as string,\n  getColumnKey = (column) => column.id as string,\n  resetRowCustomFunction,\n}: TableProps) => {\n  const NUMBER_OF_ROWS_COLUMN = \"#\";\n  const NUMBER_OF_ROWS_SUBCOLUMN = \"0\";\n\n  const tableRef = useRef<HTMLTableElement>(null);\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const generateNumberOfRowsSubColumnRecursively: (column: ColumnInstance, headerLevels: number) => void = (\n    column,\n    headerLevels\n  ) => {\n    if (headerLevels > 0) {\n      _.assign(column, {\n        columns: [\n          {\n            label: NUMBER_OF_ROWS_SUBCOLUMN,\n            accessor: NUMBER_OF_ROWS_SUBCOLUMN,\n            minWidth: 60,\n            width: 60,\n            disableResizing: true,\n            isCountColumn: true,\n            hideFilter: true,\n          },\n        ],\n      });\n\n      generateNumberOfRowsSubColumnRecursively(column.columns[0], headerLevels - 1);\n    }\n  };\n\n  const numberOfRowsColumn = {\n    label: NUMBER_OF_ROWS_COLUMN,\n    accessor: NUMBER_OF_ROWS_COLUMN,\n    width: 60,\n    minWidth: 60,\n    isCountColumn: true,\n  } as ColumnInstance;\n  generateNumberOfRowsSubColumnRecursively(numberOfRowsColumn, headerLevels);\n  const tableColumns = useRef<Column[]>([numberOfRowsColumn, ...columns]);\n  const tableRows = useRef<DataRecord[]>(rows);\n  const [showTableHandler, setShowTableHandler] = useState(false);\n  const [tableHandlerTarget, setTableHandlerTarget] = useState(document.body);\n  const [tableHandlerAllowedOperations, setTableHandlerAllowedOperations] = useState(\n    _.values(TableOperation).map((operation) => parseInt(operation.toString()))\n  );\n  const [lastSelectedColumnIndex, setLastSelectedColumnIndex] = useState(-1);\n  const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(-1);\n\n  const onColumnsUpdateCallback = useCallback(\n    (columns: Column[]) => {\n      tableColumns.current = columns;\n      onColumnsUpdate?.(columns.slice(1)); //Removing \"# of rows\" column\n    },\n    [onColumnsUpdate]\n  );\n\n  const onRowsUpdateCallback = useCallback(\n    (rows: DataRecord[]) => {\n      tableRows.current = rows;\n      onRowsUpdate?.(rows);\n    },\n    [onRowsUpdate]\n  );\n\n  const onCellUpdate = useCallback(\n    (rowIndex: number, columnId: string, value: string) => {\n      const updatedTableCells = [...tableRows.current];\n      updatedTableCells[rowIndex][columnId] = value;\n      onRowsUpdateCallback(updatedTableCells);\n    },\n    [onRowsUpdateCallback]\n  );\n\n  const onRowUpdate = useCallback(\n    (rowIndex: number, updatedRow: DataRecord) => {\n      const updatedRows = [...tableRows.current];\n      updatedRows[rowIndex] = updatedRow;\n      onRowsUpdateCallback(updatedRows);\n    },\n    [onRowsUpdateCallback]\n  );\n\n  const defaultColumn = {\n    minWidth: 150,\n    width: 150,\n    Cell: useCallback((cellRef) => {\n      const column = cellRef.column as ColumnInstance;\n      if (column.isCountColumn) {\n        return cellRef.value;\n      } else {\n        return defaultCell ? defaultCell[column.id](cellRef) : EditableCell(cellRef);\n      }\n      // Table performance optimization: no need to re-render cells, since nested component themselves will re-render\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []),\n  };\n\n  const contextMenuIsAvailable = (target: HTMLElement) => {\n    const targetIsContainedInCurrentTable = target.closest(\"table\") === tableRef.current;\n    const contextMenuAvailableForTarget = !target.classList.contains(NO_TABLE_CONTEXT_MENU_CLASS);\n    return targetIsContainedInCurrentTable && contextMenuAvailableForTarget;\n  };\n\n  const tableHandlerStateUpdate = (target: HTMLElement, columnIndex: number) => {\n    setTableHandlerTarget(target);\n    globalContext.currentlyOpenedHandlerCallback?.(false);\n    setShowTableHandler(true);\n    globalContext.setCurrentlyOpenedHandlerCallback?.(() => setShowTableHandler);\n    setLastSelectedColumnIndex(columnIndex);\n  };\n\n  const getThProps = (column: ColumnInstance, columnIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      const handlerOnHeaderIsAvailable = !column.disableHandlerOnHeader;\n      if (contextMenuIsAvailable(target) && handlerOnHeaderIsAvailable) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.current.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n        ]);\n        tableHandlerStateUpdate(target, columnIndex);\n      }\n    },\n  });\n\n  const getTdProps = (columnIndex: number, rowIndex: number) => ({\n    onContextMenu: (e: ContextMenuEvent) => {\n      const target = e.target as HTMLElement;\n      if (contextMenuIsAvailable(target)) {\n        e.preventDefault();\n        setTableHandlerAllowedOperations([\n          TableOperation.ColumnInsertLeft,\n          TableOperation.ColumnInsertRight,\n          ...(tableColumns.current.length > 2 && columnIndex > 0 ? [TableOperation.ColumnDelete] : []),\n          TableOperation.RowInsertAbove,\n          TableOperation.RowInsertBelow,\n          ...(tableRows.current.length > 1 ? [TableOperation.RowDelete] : []),\n          TableOperation.RowClear,\n        ]);\n        tableHandlerStateUpdate(target, columnIndex);\n        setLastSelectedRowIndex(rowIndex);\n      }\n    },\n  });\n\n  const tableInstance = useTable(\n    {\n      columns: tableColumns.current,\n      data: tableRows.current,\n      defaultColumn,\n      onCellUpdate,\n      onRowUpdate,\n      getThProps,\n      getTdProps,\n    },\n    useBlockLayout,\n    useResizeColumns\n  );\n\n  const resizeNestedColumns = (columns: ColumnInstance[], accessor: string, updatedWidth: number) => {\n    const columnIndex = _.findIndex(columns, { accessor });\n    if (columnIndex >= 0) {\n      const updatedColumn = { ...columns[columnIndex] };\n      updatedColumn.width = updatedWidth;\n      columns.splice(columnIndex, 1, updatedColumn);\n    } else {\n      _.forEach(columns, (column) => resizeNestedColumns(column.columns, accessor, updatedWidth));\n    }\n  };\n\n  const finishedResizing =\n    tableInstance.state.columnResizing.isResizingColumn === null &&\n    !_.isEmpty(tableInstance.state.columnResizing.columnWidths);\n  useEffect(() => {\n    if (finishedResizing) {\n      _.forEach(tableInstance.state.columnResizing.columnWidths, (updatedColumnWidth, accessor) =>\n        resizeNestedColumns(tableColumns.current as ColumnInstance[], accessor, updatedColumnWidth)\n      );\n      onColumnsUpdateCallback(tableColumns.current);\n    }\n    // Need to consider a change only when resizing is finished (no other dependencies to consider for this useEffect)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [finishedResizing]);\n\n  return (\n    <div className={`table-component ${tableId}`}>\n      <TableComposable variant=\"compact\" {...tableInstance.getTableProps()} ref={tableRef}>\n        <TableHeader\n          tableInstance={tableInstance}\n          editColumnLabel={editColumnLabel}\n          headerVisibility={headerVisibility}\n          skipLastHeaderGroup={skipLastHeaderGroup}\n          tableRows={tableRows}\n          onRowsUpdate={onRowsUpdateCallback}\n          tableColumns={tableColumns}\n          getColumnKey={getColumnKey}\n          onColumnsUpdate={onColumnsUpdateCallback}\n        />\n        <TableBody\n          tableInstance={tableInstance}\n          getRowKey={getRowKey}\n          getColumnKey={getColumnKey}\n          headerVisibility={headerVisibility}\n        >\n          {children}\n        </TableBody>\n      </TableComposable>\n      {showTableHandler ? (\n        <TableHandler\n          tableColumns={tableColumns}\n          columnPrefix={columnPrefix}\n          handlerConfiguration={handlerConfiguration}\n          lastSelectedColumnIndex={lastSelectedColumnIndex}\n          lastSelectedRowIndex={lastSelectedRowIndex}\n          tableRows={tableRows}\n          onRowsUpdate={onRowsUpdateCallback}\n          onRowAdding={onRowAdding}\n          showTableHandler={showTableHandler}\n          setShowTableHandler={setShowTableHandler}\n          tableHandlerAllowedOperations={tableHandlerAllowedOperations}\n          tableHandlerTarget={tableHandlerTarget}\n          resetRowCustomFunction={resetRowCustomFunction}\n          onColumnsUpdate={onColumnsUpdateCallback}\n        />\n      ) : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback, useEffect } from \"react\";\nimport { CellProps } from \"../../api\";\n\nexport interface EditableCellProps extends CellProps {\n  /** Cell's value */\n  value: string;\n  /** Function executed each time a cell gets updated */\n  onCellUpdate: (rowIndex: number, columnId: string, value: string) => void;\n}\n\nexport const EditableCell: React.FunctionComponent<EditableCellProps> = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  onCellUpdate,\n}: EditableCellProps) => {\n  const [value, setValue] = React.useState(initialValue);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  const onChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onBlur = useCallback(() => {\n    onCellUpdate(index, id, value);\n  }, [id, index, value, onCellUpdate]);\n\n  return <textarea value={value || \"\"} onChange={onChange} onBlur={onBlur} />;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./RelationExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport \"@patternfly/patternfly/utilities/Text/text.css\";\nimport { Column as RelationColumn, DataType, RelationProps, Row, TableOperation } from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport * as _ from \"lodash\";\nimport { Column, ColumnInstance, DataRecord } from \"react-table\";\n\nexport const RelationExpression: React.FunctionComponent<RelationProps> = (relationProps: RelationProps) => {\n  const FIRST_COLUMN_NAME = \"column-1\";\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration = [\n    {\n      group: i18n.columns,\n      items: [\n        { name: i18n.columnOperations.insertLeft, type: TableOperation.ColumnInsertLeft },\n        { name: i18n.columnOperations.insertRight, type: TableOperation.ColumnInsertRight },\n        { name: i18n.columnOperations.delete, type: TableOperation.ColumnDelete },\n      ],\n    },\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n      ],\n    },\n  ];\n\n  const tableColumns = useRef<RelationColumn[]>(\n    relationProps.columns === undefined\n      ? [{ name: FIRST_COLUMN_NAME, dataType: DataType.Undefined }]\n      : relationProps.columns\n  );\n\n  const tableRows = useRef<Row[]>(relationProps.rows === undefined ? [[\"\"]] : relationProps.rows);\n\n  const spreadRelationExpressionDefinition = useCallback(() => {\n    const expressionDefinition = {\n      ...relationProps,\n      columns: tableColumns.current,\n      rows: tableRows.current,\n    };\n    relationProps.isHeadless\n      ? relationProps.onUpdatingRecursiveExpression?.(expressionDefinition)\n      : window.beeApi?.broadcastRelationExpressionDefinition?.(expressionDefinition);\n  }, [relationProps]);\n\n  const convertColumnsForTheTable = useCallback(\n    () =>\n      _.map(\n        tableColumns.current,\n        (column: RelationColumn) =>\n          ({\n            label: column.name,\n            accessor: column.name,\n            dataType: column.dataType,\n            ...(column.width ? { width: column.width } : {}),\n          } as Column)\n      ),\n    []\n  );\n\n  const convertRowsForTheTable = useCallback(\n    () =>\n      _.map(tableRows.current, (row) =>\n        _.reduce(\n          tableColumns.current,\n          (tableRow: DataRecord, column, columnIndex) => {\n            tableRow[column.name] = row[columnIndex] || \"\";\n            return tableRow;\n          },\n          {}\n        )\n      ),\n    []\n  );\n\n  const onSavingRows = useCallback(\n    (rows: DataRecord[]) => {\n      tableRows.current = _.map(rows, (tableRow: DataRecord) =>\n        _.reduce(\n          tableColumns.current,\n          (row: string[], column: RelationColumn) => {\n            row.push((tableRow[column.name]! as string) || \"\");\n            return row;\n          },\n          []\n        )\n      );\n      spreadRelationExpressionDefinition();\n    },\n    [spreadRelationExpressionDefinition]\n  );\n\n  const onSavingColumns = useCallback(\n    (columns) => {\n      tableColumns.current = _.map(columns, (columnInstance: ColumnInstance) => ({\n        name: columnInstance.accessor,\n        dataType: columnInstance.dataType,\n        width: columnInstance.width,\n      }));\n      spreadRelationExpressionDefinition();\n    },\n    [spreadRelationExpressionDefinition]\n  );\n\n  useEffect(() => {\n    /** Function executed only the first time the component is loaded */\n    spreadRelationExpressionDefinition();\n  }, [spreadRelationExpressionDefinition]);\n\n  return (\n    <div className=\"relation-expression\">\n      <Table\n        columnPrefix=\"column-\"\n        editColumnLabel={i18n.editRelation}\n        columns={convertColumnsForTheTable()}\n        rows={convertRowsForTheTable()}\n        onColumnsUpdate={onSavingColumns}\n        onRowsUpdate={onSavingRows}\n        handlerConfiguration={handlerConfiguration}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\nimport * as _ from \"lodash\";\nimport { Resizer } from \"../Resizer\";\n\nexport interface ContextEntryExpressionProps {\n  /** The expression wrapped by the entry */\n  expression: ExpressionProps;\n  /** Function invoked when updating expression */\n  onUpdatingRecursiveExpression: (expression: ExpressionProps) => void;\n  /** Function invoked when resetting expression */\n  onExpressionResetting?: () => void;\n}\n\nexport const ContextEntryExpression: React.FunctionComponent<ContextEntryExpressionProps> = ({\n  expression,\n  onUpdatingRecursiveExpression,\n  onExpressionResetting,\n}) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const entryExpression = useRef(expression);\n\n  const expressionChangedExternally = expression.logicType === undefined;\n  useEffect(() => {\n    entryExpression.current = _.omit(expression, \"isHeadless\");\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  const onLogicTypeUpdating = useCallback(\n    (logicType) => {\n      entryExpression.current.logicType = logicType;\n      onUpdatingRecursiveExpression(_.omit(entryExpression.current, \"isHeadless\"));\n    },\n    [onUpdatingRecursiveExpression]\n  );\n\n  const onLogicTypeResetting = useCallback(() => {\n    entryExpression.current.logicType = LogicType.Undefined;\n    onExpressionResetting?.();\n    onUpdatingRecursiveExpression(_.omit(entryExpression.current, \"isHeadless\"));\n  }, [onExpressionResetting, onUpdatingRecursiveExpression]);\n\n  const onHorizontalResizeStop = useCallback((width) => {\n    // console.log(\">>>>>\" + width);\n  }, []);\n\n  return (\n    <Resizer width={300} height=\"100%\" minWidth={10} onHorizontalResizeStop={onHorizontalResizeStop}>\n      <div className=\"entry-expression\" ref={expressionContainerRef}>\n        <LogicTypeSelector\n          isHeadless={true}\n          onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n          selectedExpression={entryExpression.current}\n          onLogicTypeUpdating={onLogicTypeUpdating}\n          onLogicTypeResetting={onLogicTypeResetting}\n          getPlacementRef={getLogicTypeSelectorRef}\n        />\n      </div>\n    </Resizer>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryExpressionCell.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { CellProps, ContextEntries, ExpressionProps } from \"../../api\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\n// import { Resizer } from \"../Resizer\";\n\nexport interface ContextEntryExpressionCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryExpressionCell: React.FunctionComponent<ContextEntryExpressionCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const entryExpression = useRef({\n    uid: contextEntry.entryExpression.uid,\n    ...contextEntry.entryExpression,\n  } as ExpressionProps);\n\n  const expressionChangedExternally = contextEntry.entryExpression.logicType === undefined;\n  useEffect(() => {\n    entryExpression.current = contextEntry.entryExpression;\n    onRowUpdate(index, { ...contextEntry, entryExpression: entryExpression.current });\n    // Every time, for an expression, its logic type is undefined, it means that corresponding entry has been just added\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expressionChangedExternally]);\n\n  const onUpdatingRecursiveExpression = useCallback((expression: ExpressionProps) => {\n    entryExpression.current = expression;\n    onRowUpdate(index, { ...contextEntry, entryExpression: expression });\n    // Callback should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // const onHorizontalResizeStop = useCallback((width) => {\n  //   console.log(\">>>>>\" + width);\n  // }, []);\n\n  return (\n    // <Resizer width={200} height=\"100%\" minWidth={10} onHorizontalResizeStop={onHorizontalResizeStop}>\n    <div className=\"context-entry-expression-cell\">\n      <ContextEntryExpression\n        expression={entryExpression.current}\n        onUpdatingRecursiveExpression={onUpdatingRecursiveExpression}\n        onExpressionResetting={contextEntry.onExpressionResetting}\n      />\n    </div>\n    // </Resizer>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextEntryInfo.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { EditExpressionMenu } from \"../EditExpressionMenu\";\nimport { DataType } from \"../../api\";\nimport { Resizer } from \"../Resizer\";\n\nexport interface ContextEntryInfoProps {\n  /** Context Entry info name */\n  name: string;\n  /** Context Entry info dataType */\n  dataType: DataType;\n  /** Callback to be executed when name or dataType get updated */\n  onContextEntryUpdate: (name: string, dataType: DataType) => void;\n  /** Label used for the popover triggered when editing info section */\n  editInfoPopoverLabel: string;\n}\n\nexport const ContextEntryInfo: React.FunctionComponent<ContextEntryInfoProps> = ({\n  name,\n  dataType,\n  onContextEntryUpdate,\n  editInfoPopoverLabel,\n}) => {\n  const [entryName, setEntryName] = useState(name);\n\n  const [entryDataType, setEntryDataType] = useState(dataType);\n\n  useEffect(() => {\n    setEntryName(name);\n  }, [name]);\n\n  useEffect(() => {\n    setEntryDataType(dataType);\n  }, [dataType]);\n\n  const onEntryNameOrDataTypeUpdate = useCallback(\n    ({ name, dataType }) => {\n      setEntryName(name);\n      setEntryDataType(dataType);\n      onContextEntryUpdate(name, dataType);\n    },\n    [onContextEntryUpdate]\n  );\n\n  const onHorizontalResizeStop = useCallback((width) => {\n    // console.log(\">>>>>\" + width);\n  }, []);\n\n  return (\n    <div className=\"entry-info\">\n      <Resizer width={300} height=\"100%\" minWidth={10} onHorizontalResizeStop={onHorizontalResizeStop}>\n        <EditExpressionMenu\n          title={editInfoPopoverLabel}\n          selectedExpressionName={entryName}\n          selectedDataType={entryDataType}\n          onExpressionUpdate={onEntryNameOrDataTypeUpdate}\n        >\n          <div className=\"entry-definition\">\n            <p className=\"entry-name pf-u-text-truncate\" title={entryName}>\n              {entryName}\n            </p>\n            <p className=\"entry-data-type pf-u-text-truncate\" title={entryDataType}>\n              ({entryDataType})\n            </p>\n          </div>\n        </EditExpressionMenu>\n      </Resizer>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CellProps, ContextEntries } from \"../../api\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { DataRecord } from \"react-table\";\nimport { ContextEntryInfo } from \"./ContextEntryInfo\";\n\nexport interface ContextEntryInfoCellProps extends CellProps {\n  data: ContextEntries;\n  onRowUpdate: (rowIndex: number, updatedRow: DataRecord) => void;\n}\n\nexport const ContextEntryInfoCell: React.FunctionComponent<ContextEntryInfoCellProps> = ({\n  data,\n  row: { index },\n  onRowUpdate,\n}) => {\n  const contextEntry = data[index];\n\n  const [entryInfo, setEntryInfo] = useState(contextEntry.entryInfo);\n\n  useEffect(() => {\n    setEntryInfo(contextEntry.entryInfo);\n  }, [contextEntry.entryInfo]);\n\n  const onContextEntryUpdate = useCallback(\n    (name, dataType) => {\n      onRowUpdate(index, { ...contextEntry, entryInfo: { name, dataType } });\n    },\n    [contextEntry, index, onRowUpdate]\n  );\n\n  return (\n    <div className=\"context-entry-info-cell\">\n      <ContextEntryInfo\n        name={entryInfo.name}\n        dataType={entryInfo.dataType}\n        onContextEntryUpdate={onContextEntryUpdate}\n        editInfoPopoverLabel={contextEntry.editInfoPopoverLabel}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ContextExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  ContextEntries,\n  ContextProps,\n  DataType,\n  DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  ExpressionProps,\n  generateNextAvailableEntryName,\n  getEntryKey,\n  getHandlerConfiguration,\n  LogicType,\n  resetEntry,\n  TableHeaderVisibility,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell } from \"./ContextEntryExpressionCell\";\nimport * as _ from \"lodash\";\nimport { ContextEntryExpression } from \"./ContextEntryExpression\";\nimport { ContextEntryInfoCell } from \"./ContextEntryInfoCell\";\nimport { Resizer } from \"../Resizer\";\n\nconst DEFAULT_CONTEXT_ENTRY_NAME = \"ContextEntry-1\";\nconst DEFAULT_CONTEXT_ENTRY_DATA_TYPE = DataType.Undefined;\n\nexport const ContextExpression: React.FunctionComponent<ContextProps> = ({\n  uid,\n  name = DEFAULT_CONTEXT_ENTRY_NAME,\n  dataType = DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n  onUpdatingNameAndDataType,\n  contextEntries,\n  result = {} as ExpressionProps,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [resultExpression, setResultExpression] = useState(result);\n  const [infoWidth, setInfoWidth] = useState(entryInfoWidth);\n  const [expressionWidth, setExpressionWidth] = useState(entryExpressionWidth);\n\n  const [columns, setColumns] = useState([\n    {\n      label: name,\n      accessor: name,\n      dataType,\n      disableHandlerOnHeader: true,\n      columns: [\n        {\n          label: \"Name\",\n          accessor: \"entryInfo\",\n          disableHandlerOnHeader: true,\n          width: \"initial\",\n          // minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n        },\n        {\n          label: \"Value\",\n          accessor: \"entryExpression\",\n          disableHandlerOnHeader: true,\n          width: \"initial\",\n          // minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n        },\n      ],\n    },\n  ]);\n\n  const [rows, setRows] = useState(\n    contextEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_CONTEXT_ENTRY_NAME,\n          dataType: DEFAULT_CONTEXT_ENTRY_DATA_TYPE,\n        },\n        entryExpression: {},\n        editInfoPopoverLabel: i18n.editContextEntry,\n      } as DataRecord,\n    ]\n  );\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      onUpdatingNameAndDataType?.(expressionColumn.label, expressionColumn.dataType);\n      setExpressionWidth(_.find(expressionColumn.columns, { accessor: \"entryExpression\" })?.width as number);\n      setInfoWidth(_.find(expressionColumn.columns, { accessor: \"entryInfo\" })?.width as number);\n      setColumns(([prevExpressionColumn]) => [\n        {\n          ...prevExpressionColumn,\n          label: expressionColumn.label,\n          accessor: expressionColumn.accessor,\n          dataType: expressionColumn.dataType,\n        },\n      ]);\n    },\n    [onUpdatingNameAndDataType]\n  );\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryInfo: {\n        name: generateNextAvailableEntryName(rows as ContextEntries, \"ContextEntry\"),\n        dataType: DataType.Undefined,\n      },\n      entryExpression: {},\n      editInfoPopoverLabel: i18n.editContextEntry,\n    }),\n    [i18n.editContextEntry, rows]\n  );\n\n  const getHeaderVisibility = useCallback(() => {\n    return isHeadless ? TableHeaderVisibility.LastLevel : TableHeaderVisibility.Full;\n  }, [isHeadless]);\n\n  const onHorizontalResizeStop = useCallback((width) => {\n    // console.log(\">>>>>\" + width);\n  }, []);\n\n  useEffect(() => {\n    const [expressionColumn] = columns;\n    const updatedDefinition: ContextProps = {\n      uid,\n      logicType: LogicType.Context,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      contextEntries: rows as ContextEntries,\n      result: _.omit(resultExpression, \"isHeadless\"),\n      ...(infoWidth > DEFAULT_ENTRY_INFO_MIN_WIDTH ? { entryInfoWidth: infoWidth } : {}),\n      ...(expressionWidth > DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH ? { entryExpressionWidth: expressionWidth } : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]))\n      : window.beeApi?.broadcastContextExpressionDefinition?.(updatedDefinition);\n  }, [columns, isHeadless, onUpdatingRecursiveExpression, rows, resultExpression, infoWidth, expressionWidth, uid]);\n\n  return (\n    <div className={`context-expression ${uid}`}>\n      <Table\n        tableId={uid}\n        headerLevels={1}\n        headerVisibility={getHeaderVisibility()}\n        defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n        columns={columns}\n        rows={rows as DataRecord[]}\n        onColumnsUpdate={onColumnsUpdate}\n        onRowAdding={onRowAdding}\n        onRowsUpdate={setRows}\n        handlerConfiguration={getHandlerConfiguration(i18n, i18n.contextEntry)}\n        getRowKey={useCallback(getEntryKey, [])}\n        resetRowCustomFunction={useCallback(resetEntry, [])}\n      >\n        <Resizer width={300} height=\"100%\" minWidth={10} onHorizontalResizeStop={onHorizontalResizeStop}>\n          <div className=\"context-result\">{`<result>`}</div>\n        </Resizer>\n        <ContextEntryExpression expression={resultExpression} onUpdatingRecursiveExpression={setResultExpression} />\n      </Table>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DecisionTableProps } from \"../../api\";\nimport * as React from \"react\";\n\nexport const DecisionTableExpression: React.FunctionComponent<DecisionTableProps> = () => {\n  return <div>Decision Table</div>;\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./ListExpression.css\";\nimport * as React from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  ContextEntryRecord,\n  ExpressionProps,\n  ListProps,\n  LiteralExpressionProps,\n  LogicType,\n  TableHandlerConfiguration,\n  TableHeaderVisibility,\n  TableOperation,\n} from \"../../api\";\nimport { ContextEntryExpressionCell } from \"../ContextExpression\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { DataRecord, Row } from \"react-table\";\nimport * as _ from \"lodash\";\nimport { Resizer } from \"../Resizer\";\n\nconst LIST_EXPRESSION_MIN_WIDTH = 430;\n\nexport const ListExpression: React.FunctionComponent<ListProps> = ({\n  isHeadless,\n  items,\n  onUpdatingRecursiveExpression,\n  uid,\n  width = LIST_EXPRESSION_MIN_WIDTH,\n}: ListProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const handlerConfiguration: TableHandlerConfiguration = [\n    {\n      group: i18n.rows,\n      items: [\n        { name: i18n.rowOperations.insertAbove, type: TableOperation.RowInsertAbove },\n        { name: i18n.rowOperations.insertBelow, type: TableOperation.RowInsertBelow },\n        { name: i18n.rowOperations.delete, type: TableOperation.RowDelete },\n        { name: i18n.rowOperations.clear, type: TableOperation.RowClear },\n      ],\n    },\n  ];\n\n  const generateLiteralExpression = () => ({ logicType: LogicType.LiteralExpression } as LiteralExpressionProps);\n\n  const [listItems, setListItems] = useState(\n    _.isEmpty(items)\n      ? [\n          {\n            entryExpression: generateLiteralExpression(),\n          } as DataRecord,\n        ]\n      : _.map(items, (item) => ({ entryExpression: item } as DataRecord))\n  );\n\n  const listExpressionWidth = useRef(width);\n\n  const listTableGetRowKey = useCallback((row: Row) => (row.original as ContextEntryRecord).entryExpression.uid!, []);\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryExpression: generateLiteralExpression(),\n    }),\n    []\n  );\n\n  const spreadListExpressionDefinition = useCallback(() => {\n    const updatedDefinition: ListProps = {\n      uid,\n      ...(listExpressionWidth.current !== LIST_EXPRESSION_MIN_WIDTH ? { width: listExpressionWidth.current } : {}),\n      logicType: LogicType.List,\n      items: _.map(listItems, (listItem: DataRecord) => listItem.entryExpression as ExpressionProps),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(updatedDefinition)\n      : window.beeApi?.broadcastListExpressionDefinition?.(updatedDefinition);\n  }, [isHeadless, listItems, onUpdatingRecursiveExpression, uid]);\n\n  const onRowsUpdate = useCallback((rows) => {\n    setListItems(rows);\n  }, []);\n\n  const resetRowCustomFunction = useCallback((row: DataRecord) => {\n    return { entryExpression: { uid: (row.entryExpression as ExpressionProps).uid } };\n  }, []);\n\n  const onHorizontalResizeStop = useCallback(\n    (width) => {\n      listExpressionWidth.current = width;\n      spreadListExpressionDefinition();\n    },\n    [spreadListExpressionDefinition]\n  );\n\n  useEffect(() => {\n    /** Everytime the list of items changes, we need to spread expression's updated definition */\n    spreadListExpressionDefinition();\n  }, [listItems, spreadListExpressionDefinition]);\n\n  return (\n    <div className=\"list-expression\">\n      <Resizer\n        width={listExpressionWidth.current}\n        height=\"100%\"\n        minWidth={LIST_EXPRESSION_MIN_WIDTH}\n        onHorizontalResizeStop={onHorizontalResizeStop}\n      >\n        <Table\n          tableId={uid}\n          headerVisibility={TableHeaderVisibility.None}\n          defaultCell={{ list: ContextEntryExpressionCell }}\n          columns={[{ accessor: \"list\", width: \"100%\" }]}\n          rows={listItems as DataRecord[]}\n          onRowsUpdate={onRowsUpdate}\n          onRowAdding={onRowAdding}\n          handlerConfiguration={handlerConfiguration}\n          getRowKey={listTableGetRowKey}\n          resetRowCustomFunction={resetRowCustomFunction}\n        />\n      </Resizer>\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./InvocationExpression.css\";\nimport * as React from \"react\";\nimport { ChangeEvent, useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  ContextEntries,\n  DataType,\n  DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  generateNextAvailableEntryName,\n  getEntryKey,\n  getHandlerConfiguration,\n  InvocationProps,\n  resetEntry,\n  TableHeaderVisibility,\n} from \"../../api\";\nimport { Table } from \"../Table\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { ColumnInstance, DataRecord } from \"react-table\";\nimport { ContextEntryExpressionCell, ContextEntryInfoCell } from \"../ContextExpression\";\nimport * as _ from \"lodash\";\n\nconst DEFAULT_PARAMETER_NAME = \"p-1\";\nconst DEFAULT_PARAMETER_DATA_TYPE = DataType.Undefined;\n\nexport const InvocationExpression: React.FunctionComponent<InvocationProps> = ({\n  bindingEntries,\n  dataType = DEFAULT_PARAMETER_DATA_TYPE,\n  entryInfoWidth = DEFAULT_ENTRY_INFO_MIN_WIDTH,\n  entryExpressionWidth = DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n  invokedFunction = \"\",\n  isHeadless,\n  logicType,\n  name = DEFAULT_PARAMETER_NAME,\n  onUpdatingNameAndDataType,\n  onUpdatingRecursiveExpression,\n  uid,\n}: InvocationProps) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const [rows, setRows] = useState(\n    bindingEntries || [\n      {\n        entryInfo: {\n          name: DEFAULT_PARAMETER_NAME,\n          dataType: DEFAULT_PARAMETER_DATA_TYPE,\n        },\n        entryExpression: {},\n        editInfoPopoverLabel: i18n.editParameter,\n      } as DataRecord,\n    ]\n  );\n\n  const functionDefinition = useRef<string>(invokedFunction);\n\n  const infoWidth = useRef<number>(entryInfoWidth);\n\n  const expressionWidth = useRef<number>(entryExpressionWidth);\n\n  const spreadInvocationExpressionDefinition = useCallback(() => {\n    const [expressionColumn] = columns.current;\n\n    const updatedDefinition: InvocationProps = {\n      uid,\n      logicType,\n      name: expressionColumn.accessor,\n      dataType: expressionColumn.dataType,\n      bindingEntries: rows as ContextEntries,\n      invokedFunction: functionDefinition.current,\n      ...(infoWidth.current > DEFAULT_ENTRY_INFO_MIN_WIDTH ? { entryInfoWidth: infoWidth.current } : {}),\n      ...(expressionWidth.current > DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH\n        ? { entryExpressionWidth: expressionWidth.current }\n        : {}),\n    };\n    isHeadless\n      ? onUpdatingRecursiveExpression?.(_.omit(updatedDefinition, [\"name\", \"dataType\"]))\n      : window.beeApi?.broadcastInvocationExpressionDefinition?.(updatedDefinition);\n  }, [functionDefinition, isHeadless, logicType, onUpdatingRecursiveExpression, rows, uid]);\n\n  const onFunctionDefinitionChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    functionDefinition.current = e.target.value;\n  }, []);\n\n  const onFunctionDefinitionBlur = useCallback(() => {\n    spreadInvocationExpressionDefinition();\n  }, [spreadInvocationExpressionDefinition]);\n\n  const headerCellElement = (\n    <div className=\"function-definition-container\">\n      <input\n        className=\"function-definition pf-u-text-truncate\"\n        type=\"text\"\n        placeholder={i18n.enterFunction}\n        onChange={onFunctionDefinitionChange}\n        onBlur={onFunctionDefinitionBlur}\n        defaultValue={functionDefinition.current}\n      />\n    </div>\n  );\n\n  const columns = useRef<ColumnInstance[]>([\n    {\n      label: name,\n      accessor: name,\n      dataType,\n      disableHandlerOnHeader: true,\n      columns: [\n        {\n          headerCellElement,\n          accessor: \"functionDefinition\",\n          disableHandlerOnHeader: true,\n          columns: [\n            {\n              accessor: \"entryInfo\",\n              disableHandlerOnHeader: true,\n              canResizeOnCell: true,\n              width: infoWidth.current,\n              minWidth: DEFAULT_ENTRY_INFO_MIN_WIDTH,\n            },\n            {\n              accessor: \"entryExpression\",\n              disableHandlerOnHeader: true,\n              canResizeOnCell: true,\n              width: expressionWidth.current,\n              minWidth: DEFAULT_ENTRY_EXPRESSION_MIN_WIDTH,\n            },\n          ],\n        },\n      ],\n    },\n  ] as ColumnInstance[]);\n\n  const onColumnsUpdate = useCallback(\n    ([expressionColumn]: [ColumnInstance]) => {\n      onUpdatingNameAndDataType?.(expressionColumn.label, expressionColumn.dataType);\n      infoWidth.current = _.find(expressionColumn.columns, { accessor: \"entryInfo\" })?.width as number;\n      expressionWidth.current = _.find(expressionColumn.columns, { accessor: \"entryExpression\" })?.width as number;\n      const [updatedExpressionColumn] = columns.current;\n      updatedExpressionColumn.label = expressionColumn.label;\n      updatedExpressionColumn.accessor = expressionColumn.accessor;\n      updatedExpressionColumn.dataType = expressionColumn.dataType;\n      spreadInvocationExpressionDefinition();\n    },\n    [onUpdatingNameAndDataType, spreadInvocationExpressionDefinition]\n  );\n\n  const onRowAdding = useCallback(\n    () => ({\n      entryInfo: {\n        name: generateNextAvailableEntryName(rows as ContextEntries, \"p\"),\n        dataType: DEFAULT_PARAMETER_DATA_TYPE,\n      },\n      entryExpression: {},\n      editInfoPopoverLabel: i18n.editParameter,\n    }),\n    [i18n.editParameter, rows]\n  );\n\n  const getHeaderVisibility = useCallback(() => {\n    return isHeadless ? TableHeaderVisibility.SecondToLastLevel : TableHeaderVisibility.Full;\n  }, [isHeadless]);\n\n  useEffect(() => {\n    /** Everytime the list of items or the function definition change, we need to spread expression's updated definition */\n    spreadInvocationExpressionDefinition();\n  }, [rows, spreadInvocationExpressionDefinition]);\n\n  return (\n    <div className={`invocation-expression ${uid}`}>\n      <Table\n        tableId={uid}\n        headerLevels={2}\n        headerVisibility={getHeaderVisibility()}\n        skipLastHeaderGroup\n        defaultCell={{ entryInfo: ContextEntryInfoCell, entryExpression: ContextEntryExpressionCell }}\n        columns={columns.current}\n        rows={rows as DataRecord[]}\n        onColumnsUpdate={onColumnsUpdate}\n        onRowAdding={onRowAdding}\n        onRowsUpdate={setRows}\n        handlerConfiguration={getHandlerConfiguration(i18n, i18n.parameters)}\n        getRowKey={useCallback(getEntryKey, [])}\n        resetRowCustomFunction={useCallback(resetEntry, [])}\n      />\n    </div>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./LogicTypeSelector.css\";\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  ContextProps,\n  DataType,\n  DecisionTableProps,\n  ExpressionProps,\n  InvocationProps,\n  ListProps,\n  LiteralExpressionProps,\n  LogicType,\n  RelationProps,\n} from \"../../api\";\nimport { LiteralExpression } from \"../LiteralExpression\";\nimport { RelationExpression } from \"../RelationExpression\";\nimport { ContextExpression } from \"../ContextExpression\";\nimport { useBoxedExpressionEditorI18n } from \"../../i18n\";\nimport { PopoverMenu } from \"../PopoverMenu\";\nimport { Button, ButtonVariant, Menu, MenuItem, MenuList } from \"@patternfly/react-core\";\nimport * as _ from \"lodash\";\nimport { useContextMenuHandler } from \"../../hooks\";\nimport { NO_TABLE_CONTEXT_MENU_CLASS } from \"../Table\";\nimport nextId from \"react-id-generator\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport { DecisionTableExpression } from \"../DecisionTableExpression\";\nimport { ListExpression } from \"../ListExpression\";\nimport { InvocationExpression } from \"../InvocationExpression\";\n\nexport interface LogicTypeSelectorProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n  /** Function to be invoked when logic type changes */\n  onLogicTypeUpdating: (logicType: LogicType) => void;\n  /** Function to be invoked when logic type is reset */\n  onLogicTypeResetting: () => void;\n  /** Function to be invoked to update expression's name and datatype */\n  onUpdatingNameAndDataType?: (updatedName: string, updatedDataType: DataType) => void;\n  /** Function to be invoked to retrieve the DOM reference to be used for selector placement */\n  getPlacementRef: () => HTMLDivElement;\n  /** True to have no header for this specific expression component, used in a recursive expression */\n  isHeadless?: boolean;\n  /** When a component is headless, it will call this function to pass its most updated expression definition */\n  onUpdatingRecursiveExpression?: (expression: ExpressionProps) => void;\n}\n\nexport const LogicTypeSelector: React.FunctionComponent<LogicTypeSelectorProps> = ({\n  selectedExpression,\n  onLogicTypeUpdating,\n  onLogicTypeResetting,\n  onUpdatingNameAndDataType,\n  getPlacementRef,\n  isHeadless = false,\n  onUpdatingRecursiveExpression,\n}) => {\n  const { i18n } = useBoxedExpressionEditorI18n();\n\n  const globalContext = useContext(BoxedExpressionGlobalContext);\n\n  const expression = _.extend(selectedExpression, {\n    uid: selectedExpression.uid || nextId(),\n    isHeadless,\n    onUpdatingNameAndDataType,\n    onUpdatingRecursiveExpression,\n  });\n\n  const isLogicTypeSelected = (logicType?: LogicType) => !_.isEmpty(logicType) && logicType !== LogicType.Undefined;\n\n  const [logicTypeSelected, setLogicTypeSelected] = useState(isLogicTypeSelected(expression.logicType));\n\n  useEffect(() => {\n    setLogicTypeSelected(isLogicTypeSelected(selectedExpression.logicType));\n  }, [selectedExpression.logicType]);\n\n  const {\n    contextMenuRef,\n    contextMenuXPos,\n    contextMenuYPos,\n    contextMenuVisibility,\n    setContextMenuVisibility,\n  } = useContextMenuHandler();\n\n  const renderExpression = useMemo(() => {\n    switch (expression.logicType) {\n      case LogicType.LiteralExpression:\n        return <LiteralExpression {...(expression as LiteralExpressionProps)} />;\n      case LogicType.Relation:\n        return <RelationExpression {...(expression as RelationProps)} />;\n      case LogicType.Context:\n        return <ContextExpression {...(expression as ContextProps)} />;\n      case LogicType.DecisionTable:\n        return <DecisionTableExpression {...(expression as DecisionTableProps)} />;\n      case LogicType.Invocation:\n        return <InvocationExpression {...(expression as InvocationProps)} />;\n      case LogicType.List:\n        return <ListExpression {...(expression as ListProps)} />;\n      case LogicType.Function:\n      default:\n        return expression.logicType;\n    }\n    // logicType is enough for deciding when to re-execute this function\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expression.logicType]);\n\n  const getLogicTypesWithoutUndefined = useCallback(\n    () => Object.values(LogicType).filter((logicType) => logicType !== LogicType.Undefined),\n    []\n  );\n\n  const renderLogicTypeItems = useCallback(\n    () =>\n      _.map(getLogicTypesWithoutUndefined(), (key) => (\n        <MenuItem key={key} itemId={key}>\n          {key}\n        </MenuItem>\n      )),\n    [getLogicTypesWithoutUndefined]\n  );\n\n  const getArrowPlacement = useCallback(() => getPlacementRef() as HTMLElement, [getPlacementRef]);\n\n  const getAppendToPlacement = useCallback(() => {\n    return globalContext.boxedExpressionEditorRef?.current ?? getArrowPlacement;\n  }, [getArrowPlacement, globalContext.boxedExpressionEditorRef]);\n\n  const onLogicTypeSelect = useCallback(\n    (event: MouseEvent, itemId: string) => {\n      setLogicTypeSelected(true);\n      const selectedLogicType = itemId as LogicType;\n      onLogicTypeUpdating(selectedLogicType);\n    },\n    [onLogicTypeUpdating]\n  );\n\n  const buildLogicSelectorMenu = useCallback(\n    () => (\n      <PopoverMenu\n        title={i18n.selectLogicType}\n        arrowPlacement={getArrowPlacement}\n        appendTo={getAppendToPlacement()}\n        className=\"logic-type-popover\"\n        hasAutoWidth\n        body={\n          <Menu onSelect={onLogicTypeSelect}>\n            <MenuList>{renderLogicTypeItems()}</MenuList>\n          </Menu>\n        }\n      />\n    ),\n    [i18n.selectLogicType, getArrowPlacement, getAppendToPlacement, onLogicTypeSelect, renderLogicTypeItems]\n  );\n\n  const executeClearAction = useCallback(() => {\n    setLogicTypeSelected(false);\n    setContextMenuVisibility(false);\n    onLogicTypeResetting();\n  }, [onLogicTypeResetting, setContextMenuVisibility]);\n\n  const buildContextMenu = useCallback(\n    () => (\n      <div\n        className=\"context-menu-container no-table-context-menu\"\n        style={{\n          top: contextMenuYPos,\n          left: contextMenuXPos,\n        }}\n      >\n        <Button\n          isDisabled={!logicTypeSelected}\n          isSmall={true}\n          variant={ButtonVariant.primary}\n          onClick={executeClearAction}\n        >\n          {i18n.clear}\n        </Button>\n      </div>\n    ),\n    [logicTypeSelected, contextMenuXPos, contextMenuYPos, executeClearAction, i18n.clear]\n  );\n\n  return (\n    <div\n      className={`logic-type-selector ${NO_TABLE_CONTEXT_MENU_CLASS} ${\n        logicTypeSelected ? \"logic-type-selected\" : \"logic-type-not-present\"\n      }`}\n      ref={contextMenuRef}\n    >\n      {logicTypeSelected ? renderExpression : i18n.selectExpression}\n      {!logicTypeSelected ? buildLogicSelectorMenu() : null}\n      {contextMenuVisibility ? buildContextMenu() : null}\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function useContextMenuHandler(): {\n  contextMenuRef: RefObject<HTMLDivElement>;\n  contextMenuXPos: string;\n  contextMenuYPos: string;\n  contextMenuVisibility: boolean;\n  setContextMenuVisibility: (value: ((prevState: boolean) => boolean) | boolean) => void;\n} {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const [xPos, setXPos] = useState(\"0px\");\n  const [yPos, setYPos] = useState(\"0px\");\n  const [contextMenuVisible, setContextMenuVisible] = useState(false);\n\n  const hideContextMenu = useCallback(() => {\n    contextMenuVisible && setContextMenuVisible(false);\n  }, [contextMenuVisible]);\n\n  const showContextMenu = useCallback(\n    (event: MouseEvent) => {\n      if (wrapperRef.current && wrapperRef.current === event.target) {\n        event.preventDefault();\n        setXPos(`${event.pageX}px`);\n        setYPos(`${event.pageY}px`);\n        setContextMenuVisible(true);\n      }\n    },\n    [setXPos, setYPos]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"click\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", hideContextMenu);\n    document.addEventListener(\"contextmenu\", showContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", hideContextMenu);\n      document.removeEventListener(\"contextmenu\", showContextMenu);\n    };\n  });\n\n  return {\n    contextMenuRef: wrapperRef,\n    contextMenuXPos: xPos,\n    contextMenuYPos: yPos,\n    contextMenuVisibility: contextMenuVisible,\n    setContextMenuVisibility: setContextMenuVisible,\n  };\n}\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useCallback, useRef, useState } from \"react\";\nimport \"./ExpressionContainer.css\";\nimport { ExpressionProps, LogicType } from \"../../api\";\nimport { LogicTypeSelector } from \"../LogicTypeSelector\";\n\nexport interface ExpressionContainerProps {\n  /** Expression properties */\n  selectedExpression: ExpressionProps;\n}\n\nexport const ExpressionContainer: ({ selectedExpression }: ExpressionContainerProps) => JSX.Element = (\n  props: ExpressionContainerProps\n) => {\n  const expressionContainerRef = useRef<HTMLDivElement>(null);\n\n  const [selectedExpression, setSelectedExpression] = useState(props.selectedExpression);\n\n  const updateExpressionNameAndDataType = useCallback((updatedName, updatedDataType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      name: updatedName,\n      dataType: updatedDataType,\n    }));\n  }, []);\n\n  const onLogicTypeUpdating = useCallback((logicType) => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => ({\n      ...previousSelectedExpression,\n      logicType: logicType,\n    }));\n  }, []);\n\n  const onLogicTypeResetting = useCallback(() => {\n    setSelectedExpression((previousSelectedExpression: ExpressionProps) => {\n      const updatedExpression = {\n        uid: previousSelectedExpression.uid,\n        name: previousSelectedExpression.name,\n        dataType: previousSelectedExpression.dataType,\n        logicType: LogicType.Undefined,\n      };\n      window.beeApi?.resetExpressionDefinition?.(updatedExpression);\n      return updatedExpression;\n    });\n  }, []);\n\n  const getLogicTypeSelectorRef = useCallback(() => {\n    return expressionContainerRef.current!;\n  }, []);\n\n  return (\n    <div className=\"expression-container\">\n      <div className=\"expression-name-and-logic-type\">\n        <span className=\"expression-title\">{selectedExpression.name}</span>\n        <span className=\"expression-type\">({selectedExpression.logicType || LogicType.Undefined})</span>\n      </div>\n\n      <div\n        className=\"expression-container-box\"\n        ref={expressionContainerRef}\n        data-ouia-component-id=\"expression-container\"\n      >\n        <LogicTypeSelector\n          selectedExpression={selectedExpression}\n          onLogicTypeUpdating={onLogicTypeUpdating}\n          onLogicTypeResetting={onLogicTypeResetting}\n          onUpdatingNameAndDataType={updateExpressionNameAndDataType}\n          getPlacementRef={getLogicTypeSelectorRef}\n        />\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useRef, useState } from \"react\";\nimport \"@patternfly/react-core/dist/styles/base-no-reset.css\";\nimport \"@patternfly/react-styles/css/components/Drawer/drawer.css\";\nimport \"./BoxedExpressionEditor.css\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ExpressionContainer, ExpressionContainerProps } from \"../ExpressionContainer\";\nimport {\n  boxedExpressionEditorDictionaries,\n  BoxedExpressionEditorI18nContext,\n  boxedExpressionEditorI18nDefaults,\n} from \"../../i18n\";\nimport { BoxedExpressionGlobalContext } from \"../../context\";\nimport * as _ from \"lodash\";\nimport { ResizerSupervisor } from \"../Resizer\";\n\nexport interface BoxedExpressionEditorProps {\n  /** All expression properties used to define it */\n  expressionDefinition: ExpressionContainerProps;\n}\n\nconst BoxedExpressionEditor: (props: BoxedExpressionEditorProps) => JSX.Element = (\n  props: BoxedExpressionEditorProps\n) => {\n  const [currentlyOpenedHandlerCallback, setCurrentlyOpenedHandlerCallback] = useState(() => _.identity);\n  const boxedExpressionEditorRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <I18nDictionariesProvider\n      defaults={boxedExpressionEditorI18nDefaults}\n      dictionaries={boxedExpressionEditorDictionaries}\n      initialLocale={navigator.language}\n      ctx={BoxedExpressionEditorI18nContext}\n    >\n      <BoxedExpressionGlobalContext.Provider\n        value={{ boxedExpressionEditorRef, currentlyOpenedHandlerCallback, setCurrentlyOpenedHandlerCallback }}\n      >\n        <ResizerSupervisor>\n          <div className=\"boxed-expression-editor\" ref={boxedExpressionEditorRef}>\n            <ExpressionContainer {...props.expressionDefinition} />\n          </div>\n        </ResizerSupervisor>\n      </BoxedExpressionGlobalContext.Provider>\n    </I18nDictionariesProvider>\n  );\n};\n\nexport { BoxedExpressionEditor };\n"],"sourceRoot":""}